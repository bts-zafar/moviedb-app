{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\Moviedb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { USER_CLEARED_VISITED_MOVIES, USER_FAVORITE_TOGGLE, USER_VISITED_MOVIE } from \"./user.types\";\nconst initialState = {\n  visitedMovieIds: JSON.parse(localStorage.getItem('visitedMovies')) || [],\n  favoriteMovieIds: JSON.parse(localStorage.getItem('favoriteMovies')) || []\n};\nexport function userReducer(state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case USER_FAVORITE_TOGGLE:\n      {\n        const id = payload.id;\n        let favoriteMovieIds;\n        const isFavorite = state.favoriteMovieIds.indexOf(id) !== -1;\n        if (isFavorite) favoriteMovieIds = state.favoriteMovieIds.filter(movieId => movieId !== id);else favoriteMovieIds = [id, ...state.favoriteMovieIds];\n        localStorage.setItem('favoriteMovies', JSON.stringify(favoriteMovieIds));\n        return _objectSpread({}, state, {\n          favoriteMovieIds: favoriteMovieIds\n        });\n      }\n\n    case USER_VISITED_MOVIE:\n      {\n        const id = payload.id;\n        const visitedMovieIds = [...new Set([id, ...state.visitedMovieIds])];\n        localStorage.setItem('visitedMovies', JSON.stringify(visitedMovieIds));\n        return _objectSpread({}, state, {\n          visitedMovieIds: visitedMovieIds\n        });\n      }\n\n    case USER_CLEARED_VISITED_MOVIES:\n      {\n        localStorage.setItem('visitedMovies', JSON.stringify([]));\n        return _objectSpread({}, state, {\n          visitedMovieIds: []\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/Moviedb/src/store/domains/user/user.reducer.js"],"names":["USER_CLEARED_VISITED_MOVIES","USER_FAVORITE_TOGGLE","USER_VISITED_MOVIE","initialState","visitedMovieIds","JSON","parse","localStorage","getItem","favoriteMovieIds","userReducer","state","action","type","payload","id","isFavorite","indexOf","filter","movieId","setItem","stringify","Set"],"mappings":";AAAA,SAAQA,2BAAR,EAAqCC,oBAArC,EAA2DC,kBAA3D,QAAoF,cAApF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,KAAqD,EADrD;AAEjBC,EAAAA,gBAAgB,EAAEJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,KAAsD;AAFvD,CAArB;AAKA,OAAO,SAASE,WAAT,CAAqBC,KAAK,GAAGR,YAA7B,EAA2CS,MAA3C,EAAmD;AAAA,QAC/CC,IAD+C,GAC9BD,MAD8B,CAC/CC,IAD+C;AAAA,QACzCC,OADyC,GAC9BF,MAD8B,CACzCE,OADyC;;AAEtD,UAAQD,IAAR;AACI,SAAKZ,oBAAL;AAA2B;AACvB,cAAMc,EAAE,GAAGD,OAAO,CAACC,EAAnB;AACA,YAAIN,gBAAJ;AACA,cAAMO,UAAU,GAAGL,KAAK,CAACF,gBAAN,CAAuBQ,OAAvB,CAA+BF,EAA/B,MAAuC,CAAC,CAA3D;AACA,YAAGC,UAAH,EAAeP,gBAAgB,GAAGE,KAAK,CAACF,gBAAN,CAAuBS,MAAvB,CAA8BC,OAAO,IAAIA,OAAO,KAAKJ,EAArD,CAAnB,CAAf,KACKN,gBAAgB,GAAG,CAACM,EAAD,EAAI,GAAGJ,KAAK,CAACF,gBAAb,CAAnB;AACLF,QAAAA,YAAY,CAACa,OAAb,CAAqB,gBAArB,EAAuCf,IAAI,CAACgB,SAAL,CAAeZ,gBAAf,CAAvC;AACA,iCAAWE,KAAX;AAAkBF,UAAAA,gBAAgB,EAAEA;AAApC;AACH;;AACD,SAAKP,kBAAL;AAAyB;AACrB,cAAMa,EAAE,GAAGD,OAAO,CAACC,EAAnB;AACA,cAAMX,eAAe,GAAG,CAAC,GAAG,IAAIkB,GAAJ,CAAQ,CAACP,EAAD,EAAK,GAAGJ,KAAK,CAACP,eAAd,CAAR,CAAJ,CAAxB;AACAG,QAAAA,YAAY,CAACa,OAAb,CAAqB,eAArB,EAAsCf,IAAI,CAACgB,SAAL,CAAejB,eAAf,CAAtC;AACA,iCAAWO,KAAX;AAAkBP,UAAAA,eAAe,EAAEA;AAAnC;AACH;;AACD,SAAKJ,2BAAL;AAAkC;AAC9BO,QAAAA,YAAY,CAACa,OAAb,CAAqB,eAArB,EAAsCf,IAAI,CAACgB,SAAL,CAAe,EAAf,CAAtC;AACA,iCAAWV,KAAX;AAAkBP,UAAAA,eAAe,EAAE;AAAnC;AACH;;AACD;AACI,aAAOO,KAAP;AArBR;AAuBH","sourcesContent":["import {USER_CLEARED_VISITED_MOVIES, USER_FAVORITE_TOGGLE, USER_VISITED_MOVIE} from \"./user.types\"\n\nconst initialState = {\n    visitedMovieIds: JSON.parse(localStorage.getItem('visitedMovies')) || [],\n    favoriteMovieIds: JSON.parse(localStorage.getItem('favoriteMovies')) || []\n}\n\nexport function userReducer(state = initialState, action) {\n    const {type, payload} = action\n    switch (type) {\n        case USER_FAVORITE_TOGGLE: {\n            const id = payload.id\n            let favoriteMovieIds\n            const isFavorite = state.favoriteMovieIds.indexOf(id) !== -1\n            if(isFavorite) favoriteMovieIds = state.favoriteMovieIds.filter(movieId => movieId !== id)\n            else favoriteMovieIds = [id,...state.favoriteMovieIds]\n            localStorage.setItem('favoriteMovies', JSON.stringify(favoriteMovieIds))\n            return {...state, favoriteMovieIds: favoriteMovieIds}\n        }\n        case USER_VISITED_MOVIE: {\n            const id = payload.id\n            const visitedMovieIds = [...new Set([id, ...state.visitedMovieIds])]\n            localStorage.setItem('visitedMovies', JSON.stringify(visitedMovieIds))\n            return {...state, visitedMovieIds: visitedMovieIds}\n        }\n        case USER_CLEARED_VISITED_MOVIES: {\n            localStorage.setItem('visitedMovies', JSON.stringify([]))\n            return {...state, visitedMovieIds: []}\n        }\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}