{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\moviedb-react-app-master\\\\src\\\\components\\\\SearchOutput.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Movie } from \"./types/movie-type\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { getScoreColor } from \"./utils/score-color\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'fixed',\n    maxHeight: 400,\n    width: '100%',\n    overflowY: 'auto',\n    background: '#CAD5E2',\n    boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.22)',\n    zIndex: 2\n  }\n}));\nSearchOutput.propTypes = {\n  movies: PropTypes.arrayOf(Movie)\n};\n\nfunction SearchOutput({\n  movies = [],\n  fullHeight = false\n}) {\n  const classes = useStyles();\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.root,\n    \"aria-labelledby\": \"nested-list-subheader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, movies.map(movie => React.createElement(Item, {\n    key: movie.id,\n    movie: movie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n}\n\nconst useItemStyles = makeStyles(theme => ({\n  item: {\n    height: 60,\n    padding: theme.spacing(1),\n    paddingLeft: 20,\n    [theme.breakpoints.down('sm')]: {\n      height: 90\n    }\n  },\n  itemImage: {\n    height: '100%',\n    borderRadius: 4,\n    overflow: 'hidden',\n    flexShrink: 0\n  },\n  itemInfo: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  vote: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto',\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(1),\n    height: '100%',\n    fontWeight: 'bold',\n    fontSize: '12pt'\n  }\n}));\n\nfunction Item({\n  movie\n}) {\n  const classes = useItemStyles();\n\n  const poster = movie.posterImageUrl || require('../assets/images/abstract_movie_poster.svg');\n\n  const color = getScoreColor(movie.voteAverage);\n  return React.createElement(ListItem, {\n    button: true,\n    component: Link,\n    className: classes.item,\n    to: \"/movie/\" + movie.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.itemImage,\n    src: poster,\n    alt: movie.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.itemInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontWeight: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, movie.title), React.createElement(\"span\", {\n    style: {\n      color: 'grey'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, movie.releaseDate > 0 ? ` (${movie.releaseDate.getFullYear()})` : '')), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      color: 'grey'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, !!movie.genres.length ? movie.genres.join(', ') : '—')), React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.vote,\n    style: {\n      color: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, movie.voteAverage > 0 ? movie.voteAverage : '—'));\n}\n\nexport default SearchOutput;","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/moviedb-react-app-master/src/components/SearchOutput.js"],"names":["React","PropTypes","Movie","List","ListItem","makeStyles","Typography","getScoreColor","Link","useStyles","theme","root","position","maxHeight","width","overflowY","background","boxShadow","zIndex","SearchOutput","propTypes","movies","arrayOf","fullHeight","classes","map","movie","id","useItemStyles","item","height","padding","spacing","paddingLeft","breakpoints","down","itemImage","borderRadius","overflow","flexShrink","itemInfo","marginLeft","marginRight","vote","display","alignItems","fontWeight","fontSize","Item","poster","posterImageUrl","require","color","voteAverage","title","releaseDate","getFullYear","genres","length","join"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Movie} from \"./types/movie-type\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport {makeStyles, Typography} from \"@material-ui/core\"\nimport {getScoreColor} from \"./utils/score-color\"\nimport {Link} from \"react-router-dom\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'fixed',\n        maxHeight: 400,\n        width: '100%',\n        overflowY: 'auto',\n        background: '#CAD5E2',\n        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.22)',\n        zIndex: 2\n    }\n}))\n\nSearchOutput.propTypes = {\n    movies: PropTypes.arrayOf(Movie)\n}\n\nfunction SearchOutput({movies = [], fullHeight = false}) {\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <List className={classes.root} aria-labelledby=\"nested-list-subheader\">\n                {movies.map(movie => <Item key={movie.id} movie={movie} />)}\n            </List>\n        </React.Fragment>\n    )\n}\n\nconst useItemStyles = makeStyles(theme => ({\n    item: {\n        height: 60,\n        padding: theme.spacing(1),\n        paddingLeft: 20,\n\n        [theme.breakpoints.down('sm')]: {\n            height: 90,\n        }\n    },\n    itemImage: {\n        height: '100%',\n        borderRadius: 4,\n        overflow: 'hidden',\n        flexShrink: 0\n    },\n    itemInfo: {\n         marginLeft: theme.spacing(2),\n         marginRight: theme.spacing(2)\n    },\n    vote: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: 'auto',\n        marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        height: '100%',\n        fontWeight: 'bold',\n        fontSize: '12pt',\n    }\n}))\n\nfunction Item({movie}){\n    const classes = useItemStyles()\n\n    const poster = movie.posterImageUrl || require('../assets/images/abstract_movie_poster.svg')\n\n    const color = getScoreColor(movie.voteAverage)\n\n    return (\n        <ListItem button component={Link} className={classes.item} to={\"/movie/\" + movie.id}>\n                <img className={classes.itemImage} src={poster} alt={movie.title}/>\n                <div className={classes.itemInfo}>\n                    <Typography variant=\"body1\">\n                        <span style={{fontWeight: 500}}>{movie.title}</span>\n                        <span style={{color: 'grey'}}>{movie.releaseDate > 0 ? ` (${movie.releaseDate.getFullYear()})` : ''}</span>\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"span\" style={{color: 'grey'}}>\n                        {!!movie.genres.length ? movie.genres.join(', ') : '—'}\n                    </Typography>\n                </div>\n                <Typography\n                    variant=\"body2\"\n                    className={classes.vote}\n                    style={{color: color}}\n                >\n                    {movie.voteAverage > 0 ? movie.voteAverage : '—'}\n                </Typography>\n        </ListItem>\n    )\n}\n\nexport default SearchOutput\n"]},"metadata":{},"sourceType":"module"}