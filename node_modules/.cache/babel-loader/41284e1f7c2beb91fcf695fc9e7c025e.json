{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\moviedb-react-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\moviedb-react-app-master\\\\src\\\\components\\\\Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport Container from \"@material-ui/core/Container\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport MovieBrowser from \"./MovieBrowser\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { fetchPopularMovies, fetchTopRatedMovies, fetchUpcomingMovies } from \"../store/domains/home/home.actions\";\nimport { toggleFavorite } from \"../store/domains/user/user.actions\";\nimport { getMovie } from \"../store/utils\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nconst useStyles = makeStyles(theme => ({\n  movieList: {\n    margin: '20px 0px'\n  },\n  container: {\n    margin: '12px auto'\n  }\n}));\nconst CustomTabs = withStyles({\n  root: {\n    borderRadius: 4,\n    border: '1px solid rgb(242, 242, 242)',\n    overflow: 'hidden',\n    background: '#0D0D0D'\n  },\n  indicator: {\n    background: 'none'\n  }\n})(Tabs);\nconst CustomTab = withStyles({\n  root: {\n    minWidth: 110\n  },\n  selected: {\n    background: '#115293',\n    color: 'white'\n  }\n})(Tab);\nconst categories = {\n  POPULAR: 'popular',\n  TOP_RATED: 'top-rated',\n  UPCOMING: 'upcoming'\n};\nconst MOVIES_PER_PAGE = 20;\n\nfunction Home(props) {\n  const isAppReady = props.isAppReady,\n        popularMovies = props.popularMovies,\n        topRatedMovies = props.topRatedMovies,\n        upcomingMovies = props.upcomingMovies,\n        entities = props.entities,\n        user = props.user,\n        toggleFavorite = props.toggleFavorite,\n        fetchPopularMovies = props.fetchPopularMovies,\n        fetchTopRatedMovies = props.fetchTopRatedMovies,\n        fetchUpcomingMovies = props.fetchUpcomingMovies;\n\n  const _useState = useState(categories.POPULAR),\n        _useState2 = _slicedToArray(_useState, 2),\n        categoryName = _useState2[0],\n        setCategoryName = _useState2[1];\n\n  const categoryMap = {\n    [categories.POPULAR]: {\n      movies: popularMovies,\n      fetch: fetchPopularMovies\n    },\n    [categories.TOP_RATED]: {\n      movies: topRatedMovies,\n      fetch: fetchTopRatedMovies\n    },\n    [categories.UPCOMING]: {\n      movies: upcomingMovies,\n      fetch: fetchUpcomingMovies\n    }\n  };\n  const category = categoryMap[categoryName];\n  const movies = isAppReady ? category.movies.ids.map(id => getMovie(id, entities, user)) : [];\n\n  function loadMore() {\n    if (category.movies.totalMovies === category.movies.ids.length) return;\n    category.fetch(category.movies.ids.length / MOVIES_PER_PAGE + 1);\n  }\n\n  function switchTab(name) {\n    setCategoryName(name);\n    const newCategory = categoryMap[name];\n    if (!newCategory.movies.ids.length) newCategory.fetch();\n  }\n\n  useEffect(function () {\n    switchTab(categories.POPULAR); // TODO Should I memorize the function and constants?\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const classes = useStyles();\n  return React.createElement(Container, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(CustomTabs, {\n    value: categoryName,\n    onChange: (e, newValue) => switchTab(newValue),\n    \"aria-label\": \"disabled tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(CustomTab, {\n    label: \"Popular\",\n    value: categories.POPULAR,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(CustomTab, {\n    label: \"Top rated\",\n    value: categories.TOP_RATED,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(CustomTab, {\n    label: \"Upcoming\",\n    value: categories.UPCOMING,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    className: classes.movieList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(MovieBrowser, {\n    onLoadMore: loadMore,\n    placeholdersAmount: 10,\n    movies: movies,\n    onFavorite: toggleFavorite,\n    isFetched: category.movies.isFetched,\n    isFetching: !isAppReady || category.movies.isFetching,\n    totalMovies: category.movies.totalMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAppReady: state.common.isAppReady,\n    popularMovies: state.home.popularMovies,\n    topRatedMovies: state.home.topRatedMovies,\n    upcomingMovies: state.home.upcomingMovies,\n    entities: state.entities,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchPopularMovies: page => dispatch(fetchPopularMovies(page)),\n    fetchTopRatedMovies: page => dispatch(fetchTopRatedMovies(page)),\n    fetchUpcomingMovies: page => dispatch(fetchUpcomingMovies(page)),\n    toggleFavorite: id => dispatch(toggleFavorite(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/moviedb-react-app-master/src/components/Home.js"],"names":["React","useEffect","useState","Container","Tabs","Tab","MovieBrowser","makeStyles","connect","fetchPopularMovies","fetchTopRatedMovies","fetchUpcomingMovies","toggleFavorite","getMovie","withStyles","useStyles","theme","movieList","margin","container","CustomTabs","root","borderRadius","border","overflow","background","indicator","CustomTab","minWidth","selected","color","categories","POPULAR","TOP_RATED","UPCOMING","MOVIES_PER_PAGE","Home","props","isAppReady","popularMovies","topRatedMovies","upcomingMovies","entities","user","categoryName","setCategoryName","categoryMap","movies","fetch","category","ids","map","id","loadMore","totalMovies","length","switchTab","name","newCategory","classes","e","newValue","isFetched","isFetching","mapStateToProps","state","common","home","mapDispatchToProps","dispatch","page"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport Container from \"@material-ui/core/Container\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport MovieBrowser from \"./MovieBrowser\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {connect} from \"react-redux\"\nimport {fetchPopularMovies, fetchTopRatedMovies, fetchUpcomingMovies, } from \"../store/domains/home/home.actions\"\nimport {toggleFavorite} from \"../store/domains/user/user.actions\"\nimport {getMovie} from \"../store/utils\"\nimport withStyles from \"@material-ui/core/styles/withStyles\"\n\nconst useStyles = makeStyles(theme => ({\n    movieList: {\n        margin: '20px 0px'\n    },\n    container: {\n        margin: '12px auto'\n    },\n}))\n\nconst CustomTabs = withStyles({\n    root: {\n        borderRadius: 4,\n        border: '1px solid rgb(242, 242, 242)',\n        overflow: 'hidden',\n        background: '#0D0D0D',\n    },\n    indicator: {\n        background: 'none'\n    }\n})(Tabs)\n\nconst CustomTab = withStyles({\n    root: {\n        minWidth: 110\n    },\n    selected: {\n        background: '#115293',\n        color: 'white'\n    }\n})(Tab)\n\nconst categories = {\n    POPULAR: 'popular',\n    TOP_RATED: 'top-rated',\n    UPCOMING: 'upcoming'\n}\n\nconst MOVIES_PER_PAGE = 20\n\nfunction Home(props) {\n    const {\n        isAppReady,\n\n        popularMovies,\n        topRatedMovies,\n        upcomingMovies,\n\n        entities,\n        user,\n\n        toggleFavorite,\n        fetchPopularMovies,\n        fetchTopRatedMovies,\n        fetchUpcomingMovies,\n    } = props\n\n    const [categoryName, setCategoryName] = useState(categories.POPULAR)\n    const categoryMap = {\n        [categories.POPULAR]: {\n            movies: popularMovies,\n            fetch: fetchPopularMovies\n        },\n        [categories.TOP_RATED]: {\n            movies: topRatedMovies,\n            fetch: fetchTopRatedMovies\n        },\n        [categories.UPCOMING]: {\n            movies: upcomingMovies,\n            fetch: fetchUpcomingMovies,\n        }\n    }\n    const category = categoryMap[categoryName]\n    const movies = isAppReady ? category.movies.ids.map(id => getMovie(id, entities, user)) : []\n\n    function loadMore() {\n        if(category.movies.totalMovies === category.movies.ids.length) return\n        category.fetch(category.movies.ids.length / MOVIES_PER_PAGE + 1)\n    }\n\n    function switchTab(name){\n        setCategoryName(name)\n        const newCategory = categoryMap[name]\n        if(!newCategory.movies.ids.length) newCategory.fetch()\n    }\n\n    useEffect(function () {\n        switchTab(categories.POPULAR)\n        // TODO Should I memorize the function and constants?\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const classes = useStyles()\n\n    return (\n        <Container className={classes.container}>\n                <CustomTabs\n                    value={categoryName}\n                    onChange={(e, newValue) => switchTab(newValue)}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <CustomTab label=\"Popular\" value={categories.POPULAR}/>\n                    <CustomTab label=\"Top rated\" value={categories.TOP_RATED}/>\n                    <CustomTab label=\"Upcoming\" value={categories.UPCOMING}/>\n                </CustomTabs>\n                <main className={classes.movieList}>\n                    <MovieBrowser\n                        onLoadMore={loadMore}\n                        placeholdersAmount={10}\n                        movies={movies}\n                        onFavorite={toggleFavorite}\n                        isFetched={category.movies.isFetched}\n                        isFetching={!isAppReady || category.movies.isFetching}\n                        totalMovies={category.movies.totalMovies}\n                    />\n                </main>\n        </Container>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAppReady: state.common.isAppReady,\n\n        popularMovies: state.home.popularMovies,\n        topRatedMovies: state.home.topRatedMovies,\n        upcomingMovies: state.home.upcomingMovies,\n\n        entities: state.entities,\n        user: state.user,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchPopularMovies: (page) => dispatch(fetchPopularMovies(page)),\n        fetchTopRatedMovies: (page) => dispatch(fetchTopRatedMovies(page)),\n        fetchUpcomingMovies: (page) => dispatch(fetchUpcomingMovies(page)),\n        toggleFavorite: (id) => dispatch(toggleFavorite(id))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n"]},"metadata":{},"sourceType":"module"}