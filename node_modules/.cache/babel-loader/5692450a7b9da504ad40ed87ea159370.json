{"ast":null,"code":"const universalMessage = \"Something went wrong\";\nexport function prepareError(error) {\n  if (typeof error === 'string') return error;else if (error.isAxiosError) {\n    if (!error.response) {\n      return error.message || universalMessage;\n    }\n\n    const status = error.response.status;\n    if (status === 404) return universalMessage;else if (error.response.message) return error.response.message;else return error.message;\n  } else if (error.message) {\n    return error.message;\n  } else if (error.error) {\n    return prepareError(error.error);\n  }\n  return universalMessage;\n}","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/Moviedb/src/store/domains/ui/ui.utils.js"],"names":["universalMessage","prepareError","error","isAxiosError","response","message","status"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,sBAAzB;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,MAAG,OAAOA,KAAP,KAAiB,QAApB,EAA8B,OAAOA,KAAP,CAA9B,KACK,IAAGA,KAAK,CAACC,YAAT,EAAuB;AACxB,QAAG,CAACD,KAAK,CAACE,QAAV,EAAoB;AAChB,aAAOF,KAAK,CAACG,OAAN,IAAiBL,gBAAxB;AACH;;AACD,UAAMM,MAAM,GAAGJ,KAAK,CAACE,QAAN,CAAeE,MAA9B;AACA,QAAGA,MAAM,KAAK,GAAd,EAAmB,OAAON,gBAAP,CAAnB,KACK,IAAGE,KAAK,CAACE,QAAN,CAAeC,OAAlB,EAA2B,OAAOH,KAAK,CAACE,QAAN,CAAeC,OAAtB,CAA3B,KACA,OAAOH,KAAK,CAACG,OAAb;AACR,GARI,MAQE,IAAGH,KAAK,CAACG,OAAT,EAAiB;AACpB,WAAOH,KAAK,CAACG,OAAb;AACH,GAFM,MAEA,IAAGH,KAAK,CAACA,KAAT,EAAgB;AACnB,WAAOD,YAAY,CAACC,KAAK,CAACA,KAAP,CAAnB;AACH;AACD,SAAOF,gBAAP;AACH","sourcesContent":["const universalMessage = \"Something went wrong\"\n\nexport function prepareError(error) {\n    if(typeof error === 'string') return error\n    else if(error.isAxiosError) {\n        if(!error.response) {\n            return error.message || universalMessage\n        }\n        const status = error.response.status\n        if(status === 404) return universalMessage\n        else if(error.response.message) return error.response.message\n        else return error.message\n    } else if(error.message){\n        return error.message\n    } else if(error.error) {\n        return prepareError(error.error)\n    }\n    return universalMessage\n}\n"]},"metadata":{},"sourceType":"module"}