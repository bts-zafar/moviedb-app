{"ast":null,"code":"import{ActionTask}from\"../../middlewares/utils\";import{MOVIEDB_MIDDLEWARE}from\"../../middlewares/moviedb-api\";import{SEARCH_CANCEL,SEARCH_FAIL,SEARCH_QUERY_CHANGED,SEARCH_REQUEST,SEARCH_SUCCESS}from\"./search.types\";import{ADD_ERROR}from\"../ui/ui.types\";var DUMMY_ACTION={type:\"DO_NOTHING\"};var searchTask={isDone:true,isCancelled:false};export function searchMovies(query){var page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!query||!query.trim().length){if(!searchTask.isDone&&!searchTask.isCancelled){// Cancel task and return DUMMY_ACTION\n// because the cancel handler has already declared \n// what to dispatch after cancel() call\nsearchTask.cancel();return DUMMY_ACTION;}return cancelSearch();}if(!searchTask.isDone&&!searchTask.isCancelled)cancelSearch();searchTask=ActionTask();return{type:\"MOVIES_SEARCH\",payload:null,meta:{target:MOVIEDB_MIDDLEWARE,url:'search/movie',method:\"GET\",params:{query:query,page:page},task:searchTask,handlers:{request:SEARCH_REQUEST,success:SEARCH_SUCCESS,fail:[ADD_ERROR,SEARCH_FAIL],cancel:SEARCH_CANCEL}}};}export function cancelSearch(){if(!searchTask.isDone&&!searchTask.isCancelled){// Return DUMMY_ACTION because\n// search action will automatically dispatch cancel handler\nsearchTask.cancel();return DUMMY_ACTION;}return{type:SEARCH_CANCEL};}export function changeQuery(value){return{type:SEARCH_QUERY_CHANGED,payload:{query:value}};}","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/moviedb-react-app-master/src/store/domains/search/search.actions.js"],"names":["ActionTask","MOVIEDB_MIDDLEWARE","SEARCH_CANCEL","SEARCH_FAIL","SEARCH_QUERY_CHANGED","SEARCH_REQUEST","SEARCH_SUCCESS","ADD_ERROR","DUMMY_ACTION","type","searchTask","isDone","isCancelled","searchMovies","query","page","trim","length","cancel","cancelSearch","payload","meta","target","url","method","params","task","handlers","request","success","fail","changeQuery","value"],"mappings":"AAAA,OAAQA,UAAR,KAAyB,yBAAzB,CACA,OAAQC,kBAAR,KAAiC,+BAAjC,CACA,OAAQC,aAAR,CAAuBC,WAAvB,CAAoCC,oBAApC,CAA0DC,cAA1D,CAA0EC,cAA1E,KAA+F,gBAA/F,CACA,OAAQC,SAAR,KAAwB,gBAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CAACC,IAAI,CAAE,YAAP,CAArB,CAEA,GAAIC,CAAAA,UAAU,CAAG,CAACC,MAAM,CAAE,IAAT,CAAeC,WAAW,CAAE,KAA5B,CAAjB,CAEA,MAAO,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAAuC,IAAVC,CAAAA,IAAU,2DAAH,CAAG,CAC1C,GAAI,CAACD,KAAD,EAAU,CAACA,KAAK,CAACE,IAAN,GAAaC,MAA5B,CAAoC,CAChC,GAAG,CAACP,UAAU,CAACC,MAAZ,EAAsB,CAACD,UAAU,CAACE,WAArC,CAAkD,CAC9C;AACA;AACA;AACAF,UAAU,CAACQ,MAAX,GACA,MAAOV,CAAAA,YAAP,CACH,CACD,MAAOW,CAAAA,YAAY,EAAnB,CACH,CACD,GAAI,CAACT,UAAU,CAACC,MAAZ,EAAsB,CAACD,UAAU,CAACE,WAAtC,CAAmDO,YAAY,GAE/DT,UAAU,CAAGV,UAAU,EAAvB,CAEA,MAAO,CACHS,IAAI,CAAE,eADH,CAEHW,OAAO,CAAE,IAFN,CAGHC,IAAI,CAAE,CACFC,MAAM,CAAErB,kBADN,CAEFsB,GAAG,CAAE,cAFH,CAGFC,MAAM,CAAE,KAHN,CAIFC,MAAM,CAAE,CAACX,KAAK,CAALA,KAAD,CAAQC,IAAI,CAAJA,IAAR,CAJN,CAKFW,IAAI,CAAEhB,UALJ,CAMFiB,QAAQ,CAAE,CACNC,OAAO,CAAEvB,cADH,CAENwB,OAAO,CAAEvB,cAFH,CAGNwB,IAAI,CAAE,CAACvB,SAAD,CAAYJ,WAAZ,CAHA,CAINe,MAAM,CAAEhB,aAJF,CANR,CAHH,CAAP,CAiBH,CAED,MAAO,SAASiB,CAAAA,YAAT,EAAuB,CAC1B,GAAI,CAACT,UAAU,CAACC,MAAZ,EAAsB,CAACD,UAAU,CAACE,WAAtC,CAAmD,CAC/C;AACA;AACAF,UAAU,CAACQ,MAAX,GACA,MAAOV,CAAAA,YAAP,CACH,CACD,MAAO,CAACC,IAAI,CAAEP,aAAP,CAAP,CACH,CAED,MAAO,SAAS6B,CAAAA,WAAT,CAAqBC,KAArB,CAA2B,CAC9B,MAAO,CAACvB,IAAI,CAAEL,oBAAP,CAA6BgB,OAAO,CAAE,CAACN,KAAK,CAAEkB,KAAR,CAAtC,CAAP,CACH","sourcesContent":["import {ActionTask} from \"../../middlewares/utils\"\nimport {MOVIEDB_MIDDLEWARE} from \"../../middlewares/moviedb-api\"\nimport {SEARCH_CANCEL, SEARCH_FAIL, SEARCH_QUERY_CHANGED, SEARCH_REQUEST, SEARCH_SUCCESS} from \"./search.types\"\nimport {ADD_ERROR} from \"../ui/ui.types\"\n\nconst DUMMY_ACTION = {type: \"DO_NOTHING\"}\n\nlet searchTask = {isDone: true, isCancelled: false}\n\nexport function searchMovies(query, page = 1) {\n    if (!query || !query.trim().length) {\n        if(!searchTask.isDone && !searchTask.isCancelled) {\n            // Cancel task and return DUMMY_ACTION\n            // because the cancel handler has already declared \n            // what to dispatch after cancel() call\n            searchTask.cancel()\n            return DUMMY_ACTION\n        }\n        return cancelSearch()\n    }\n    if (!searchTask.isDone && !searchTask.isCancelled) cancelSearch()\n\n    searchTask = ActionTask()\n\n    return {\n        type: \"MOVIES_SEARCH\",\n        payload: null,\n        meta: {\n            target: MOVIEDB_MIDDLEWARE,\n            url: 'search/movie',\n            method: \"GET\",\n            params: {query, page},\n            task: searchTask,\n            handlers: {\n                request: SEARCH_REQUEST,\n                success: SEARCH_SUCCESS,\n                fail: [ADD_ERROR, SEARCH_FAIL],\n                cancel: SEARCH_CANCEL\n            },\n        }\n    }\n}\n\nexport function cancelSearch(){\n    if (!searchTask.isDone && !searchTask.isCancelled) {\n        // Return DUMMY_ACTION because\n        // search action will automatically dispatch cancel handler\n        searchTask.cancel()\n        return DUMMY_ACTION\n    }\n    return {type: SEARCH_CANCEL}\n}\n\nexport function changeQuery(value){\n    return {type: SEARCH_QUERY_CHANGED, payload: {query: value}}\n}\n"]},"metadata":{},"sourceType":"module"}