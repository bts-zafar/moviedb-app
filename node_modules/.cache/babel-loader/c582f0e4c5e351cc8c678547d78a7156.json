{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\moviedb-react-app-master\\\\src\\\\components\\\\Visited.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EmptyBlock from \"./placeholders/EmptyBlock\";\nimport Button from \"@material-ui/core/Button\";\nimport { getMovie } from \"../store/utils\";\nimport LazyLoad from \"react-lazyload\";\nimport MovieCardFetch from \"./MovieCardFetch\";\nimport { fetchMovie } from \"../store/domains/entities/entities.actions\";\nimport { clearVisitedMovies, toggleFavorite } from \"../store/domains/user/user.actions\";\nimport MovieList, { MovieListItem } from \"./MovieList\";\n\nfunction Visited({\n  isAppReady,\n  movieIds,\n  entities,\n  user,\n  fetchMovie,\n  toggleFavorite,\n  cleanVisitedMovies\n}) {\n  return React.createElement(Container, {\n    style: {\n      margin: '20px auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      margin: '40px 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Visited movies\"), React.createElement(Button, {\n    onClick: cleanVisitedMovies,\n    style: {\n      marginLeft: 'auto'\n    },\n    variant: \"outlined\",\n    disabled: !movieIds.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Clear history\")), !movieIds.length && React.createElement(EmptyBlock, {\n    text: \"You haven't marked favorite movies yet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), !!movieIds.length && React.createElement(MovieList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, movieIds.map(id => {\n    const movie = getMovie(id, entities, user);\n    return React.createElement(LazyLoad, {\n      minheight: 400,\n      key: id,\n      once: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(MovieListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(MovieCardFetch, {\n      id: id,\n      movie: movie,\n      fetch: fetchMovie,\n      ready: isAppReady,\n      onFavorite: toggleFavorite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAppReady: state.common.isAppReady,\n    movieIds: state.user.visitedMovieIds,\n    entities: state.entities,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchMovie: id => dispatch(fetchMovie(id)),\n    toggleFavorite: id => dispatch(toggleFavorite(id)),\n    cleanVisitedMovies: () => dispatch(clearVisitedMovies())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Visited);","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/moviedb-react-app-master/src/components/Visited.js"],"names":["React","connect","Container","Typography","EmptyBlock","Button","getMovie","LazyLoad","MovieCardFetch","fetchMovie","clearVisitedMovies","toggleFavorite","MovieList","MovieListItem","Visited","isAppReady","movieIds","entities","user","cleanVisitedMovies","margin","display","marginLeft","length","map","id","movie","mapStateToProps","state","common","visitedMovieIds","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\"\nimport {Container} from \"@material-ui/core\"\nimport Typography from \"@material-ui/core/Typography\"\nimport EmptyBlock from \"./placeholders/EmptyBlock\"\nimport Button from \"@material-ui/core/Button\"\nimport {getMovie} from \"../store/utils\"\nimport LazyLoad from \"react-lazyload\"\nimport MovieCardFetch from \"./MovieCardFetch\"\nimport {fetchMovie} from \"../store/domains/entities/entities.actions\"\nimport {clearVisitedMovies, toggleFavorite} from \"../store/domains/user/user.actions\"\nimport MovieList, {MovieListItem} from \"./MovieList\"\n\nfunction Visited({isAppReady, movieIds, entities, user, fetchMovie, toggleFavorite, cleanVisitedMovies}) {\n    return (\n        <Container style={{margin: '20px auto'}}>\n            <div style={{display: 'flex', margin: '40px 0'}} >\n                <Typography component=\"h2\" variant=\"h4\">\n                    Visited movies\n                </Typography>\n                <Button onClick={cleanVisitedMovies} style={{marginLeft: 'auto'}} variant=\"outlined\" disabled={!movieIds.length}>Clear history</Button>\n            </div>\n            {!movieIds.length && (\n                <EmptyBlock text=\"You haven't marked favorite movies yet\"/>\n            )}\n            {!!movieIds.length && (\n                <MovieList>\n                    {movieIds.map(id => {\n                        const movie = getMovie(id, entities, user)\n                        return (\n                            <LazyLoad minheight={400} key={id} once>\n                                <MovieListItem>\n                                    <MovieCardFetch\n                                        id={id}\n                                        movie={movie}\n                                        fetch={fetchMovie}\n                                        ready={isAppReady}\n                                        onFavorite={toggleFavorite}\n                                    />\n                                </MovieListItem>\n                            </LazyLoad>\n                        )\n                    })}\n                </MovieList>\n            )}\n        </Container>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        isAppReady: state.common.isAppReady,\n        movieIds: state.user.visitedMovieIds,\n        entities: state.entities,\n        user: state.user\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchMovie: (id) => dispatch(fetchMovie(id)),\n        toggleFavorite: (id) => dispatch(toggleFavorite(id)),\n        cleanVisitedMovies: () => dispatch(clearVisitedMovies())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Visited)\n"]},"metadata":{},"sourceType":"module"}