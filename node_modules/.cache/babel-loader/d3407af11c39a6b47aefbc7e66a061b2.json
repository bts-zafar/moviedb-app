{"ast":null,"code":"import React from'react';import LazyLoad from'react-lazyload';import{connect}from\"react-redux\";import Typography from\"@material-ui/core/Typography\";import Container from\"@material-ui/core/Container\";import EmptyBlock from\"./placeholders/EmptyBlock\";import{fetchMovie as _fetchMovie}from\"../store/domains/entities/entities.actions\";import{getMovie}from\"../store/utils\";import{toggleFavorite as _toggleFavorite}from\"../store/domains/user/user.actions\";import MovieCardFetch from\"./MovieCardFetch\";import MovieList,{MovieListItem}from\"./MovieList\";function Favorites(_ref){var isAppReady=_ref.isAppReady,movieIds=_ref.movieIds,entities=_ref.entities,user=_ref.user,fetchMovie=_ref.fetchMovie,toggleFavorite=_ref.toggleFavorite;return React.createElement(Container,{style:{margin:'20px auto',height:'100vh'}},React.createElement(Typography,{component:\"h2\",variant:\"h4\",style:{margin:'40px 0',color:'#fff'}},\"Favorite movies\"),!movieIds.length&&React.createElement(EmptyBlock,{text:\"You haven't marked favorite movies yet\"}),!!movieIds.length&&React.createElement(MovieList,null,movieIds.map(function(id){var movie=getMovie(id,entities,user);return React.createElement(LazyLoad,{minheight:400,key:id,once:true},React.createElement(MovieListItem,null,React.createElement(MovieCardFetch,{id:id,movie:movie,fetch:fetchMovie,ready:isAppReady,onFavorite:toggleFavorite})));})));}function mapStateToProps(state){return{isAppReady:state.common.isAppReady,movieIds:state.user.favoriteMovieIds,entities:state.entities,user:state.user};}function mapDispatchToProps(dispatch){return{fetchMovie:function fetchMovie(id){return dispatch(_fetchMovie(id));},toggleFavorite:function toggleFavorite(id){return dispatch(_toggleFavorite(id));}};}export default connect(mapStateToProps,mapDispatchToProps)(Favorites);","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/Moviedb/src/components/Favorites.js"],"names":["React","LazyLoad","connect","Typography","Container","EmptyBlock","fetchMovie","getMovie","toggleFavorite","MovieCardFetch","MovieList","MovieListItem","Favorites","isAppReady","movieIds","entities","user","margin","height","color","length","map","id","movie","mapStateToProps","state","common","favoriteMovieIds","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,OAAQC,UAAU,GAAVA,CAAAA,WAAR,KAAyB,4CAAzB,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CACA,OAAQC,cAAc,GAAdA,CAAAA,eAAR,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,SAAP,EAAmBC,aAAnB,KAAuC,aAAvC,CAEA,QAASC,CAAAA,SAAT,MAAuF,IAAnEC,CAAAA,UAAmE,MAAnEA,UAAmE,CAAvDC,QAAuD,MAAvDA,QAAuD,CAA7CC,QAA6C,MAA7CA,QAA6C,CAAnCC,IAAmC,MAAnCA,IAAmC,CAA7BV,UAA6B,MAA7BA,UAA6B,CAAjBE,cAAiB,MAAjBA,cAAiB,CAEnF,MACI,qBAAC,SAAD,EAAW,KAAK,CAAE,CAACS,MAAM,CAAE,WAAT,CAAsBC,MAAM,CAAE,OAA9B,CAAlB,EACI,oBAAC,UAAD,EAAY,SAAS,CAAC,IAAtB,CAA2B,OAAO,CAAC,IAAnC,CAAwC,KAAK,CAAE,CAACD,MAAM,CAAE,QAAT,CAAmBE,KAAK,CAAE,MAA1B,CAA/C,oBADJ,CAIK,CAACL,QAAQ,CAACM,MAAV,EACG,oBAAC,UAAD,EAAY,IAAI,CAAC,wCAAjB,EALR,CAOK,CAAC,CAACN,QAAQ,CAACM,MAAX,EACG,oBAAC,SAAD,MACKN,QAAQ,CAACO,GAAT,CAAa,SAAAC,EAAE,CAAI,CAChB,GAAMC,CAAAA,KAAK,CAAGhB,QAAQ,CAACe,EAAD,CAAKP,QAAL,CAAeC,IAAf,CAAtB,CACA,MACI,qBAAC,QAAD,EAAU,SAAS,CAAE,GAArB,CAA0B,GAAG,CAAEM,EAA/B,CAAmC,IAAI,KAAvC,EACI,oBAAC,aAAD,MACI,oBAAC,cAAD,EACI,EAAE,CAAEA,EADR,CAEI,KAAK,CAAEC,KAFX,CAGI,KAAK,CAAEjB,UAHX,CAII,KAAK,CAAEO,UAJX,CAKI,UAAU,CAAEL,cALhB,EADJ,CADJ,CADJ,CAaH,CAfA,CADL,CARR,CADJ,CA8BH,CAED,QAASgB,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACHZ,UAAU,CAAEY,KAAK,CAACC,MAAN,CAAab,UADtB,CAEHC,QAAQ,CAAEW,KAAK,CAACT,IAAN,CAAWW,gBAFlB,CAGHZ,QAAQ,CAAEU,KAAK,CAACV,QAHb,CAIHC,IAAI,CAAES,KAAK,CAACT,IAJT,CAAP,CAMH,CAED,QAASY,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHvB,UAAU,CAAE,oBAACgB,EAAD,QAAQO,CAAAA,QAAQ,CAACvB,WAAU,CAACgB,EAAD,CAAX,CAAhB,EADT,CAEHd,cAAc,CAAE,wBAACc,EAAD,QAAQO,CAAAA,QAAQ,CAACrB,eAAc,CAACc,EAAD,CAAf,CAAhB,EAFb,CAAP,CAIH,CAED,cAAepB,CAAAA,OAAO,CAACsB,eAAD,CAAkBI,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["import React from 'react'\nimport LazyLoad from 'react-lazyload'\nimport {connect} from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Container from \"@material-ui/core/Container\"\nimport EmptyBlock from \"./placeholders/EmptyBlock\"\nimport {fetchMovie} from \"../store/domains/entities/entities.actions\"\nimport {getMovie} from \"../store/utils\"\nimport {toggleFavorite} from \"../store/domains/user/user.actions\"\nimport MovieCardFetch from \"./MovieCardFetch\"\nimport MovieList, {MovieListItem} from \"./MovieList\"\n\nfunction Favorites({isAppReady, movieIds, entities, user, fetchMovie, toggleFavorite}) {\n\n    return (\n        <Container style={{margin: '20px auto', height: '100vh'}}>\n            <Typography component=\"h2\" variant=\"h4\" style={{margin: '40px 0', color: '#fff'}}>\n                Favorite movies\n            </Typography>\n            {!movieIds.length && (\n                <EmptyBlock text=\"You haven't marked favorite movies yet\"/>\n            )}\n            {!!movieIds.length && (\n                <MovieList>\n                    {movieIds.map(id => {\n                        const movie = getMovie(id, entities, user)\n                        return (\n                            <LazyLoad minheight={400} key={id} once>\n                                <MovieListItem>\n                                    <MovieCardFetch\n                                        id={id}\n                                        movie={movie}\n                                        fetch={fetchMovie}\n                                        ready={isAppReady}\n                                        onFavorite={toggleFavorite}\n                                    />\n                                </MovieListItem>\n                            </LazyLoad>\n                        )\n                    })}\n                </MovieList>\n            )}\n        </Container>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAppReady: state.common.isAppReady,\n        movieIds: state.user.favoriteMovieIds,\n        entities: state.entities,\n        user: state.user\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchMovie: (id) => dispatch(fetchMovie(id)),\n        toggleFavorite: (id) => dispatch(toggleFavorite(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites)\n"]},"metadata":{},"sourceType":"module"}