{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\Moviedb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\Moviedb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\Moviedb\\\\src\\\\components\\\\Navbar.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport SearchInput from \"./SearchInput\";\nimport SearchOutput from \"./SearchOutput\";\nimport { cancelSearch, changeQuery, searchMovies } from \"../store/domains/search/search.actions\";\nimport { connect } from \"react-redux\";\nimport { debounce } from \"./utils/debounce\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  menu: {\n    marginRight: 10\n  },\n  brand: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  overlay: {\n    position: 'fixed',\n    width: '100%',\n    height: '100vh',\n    top: 0,\n    left: 0,\n    background: 'rgba(9, 9, 10, 0.6)',\n    zIndex: 1\n  }\n}));\nconst CustomAppBar = withStyles({\n  root: {\n    color: '#333',\n    background: 'white',\n    boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)'\n  }\n})(AppBar);\nconst NavButton = withStyles(theme => ({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    \"&:hover\": {\n      backgroundColor: 'rgba(0, 0, 0, 0.08)'\n    }\n  }\n}))(Button);\n\nfunction Navbar(props) {\n  const theme = useTheme();\n  const onMenu = props.onMenu;\n  const query = props.query,\n        foundMovies = props.foundMovies,\n        entities = props.entities,\n        location = props.location;\n  const changeQuery = props.changeQuery,\n        searchMovies = props.searchMovies,\n        cancelSearch = props.cancelSearch;\n  const classes = useStyles();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showMobileSearch = _useState2[0],\n        setShowMobileSearch = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showOutput = _useState4[0],\n        setShowOutput = _useState4[1]; // add 'genres' property\n\n\n  const output = foundMovies.map(movie => _objectSpread({}, movie, {\n    genres: movie.genreIds.map(id => entities.genresById[id])\n  }));\n  const searchDebounce = useCallback(debounce(function (value) {\n    searchMovies(value);\n    setShowOutput(true);\n  }, 600), [searchMovies]);\n\n  function handleSearchInput(e) {\n    const value = e.target.value;\n    changeQuery(value);\n    cancelSearch();\n    if (value.length && value.trim().length < 2) return;\n    searchDebounce(value);\n  } // disable/enable scrolling of body element\n\n\n  useEffect(function () {\n    bodyScrolling(!(showOutput && foundMovies.length));\n  }, [showOutput, foundMovies]); // hide output when location (page) has changed\n\n  useEffect(function () {\n    setShowOutput(false);\n  }, [location]);\n\n  const mobileNavBar = () => React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, showOutput && React.createElement(\"div\", {\n    className: classes.overlay,\n    onClick: e => setShowOutput(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(CustomAppBar, {\n    position: \"sticky\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: onMenu,\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    className: classes.menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: classes.brand,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \" Movie App \\uD83D\\uDC4B \")), React.createElement(IconButton, {\n    onClick: e => setShowMobileSearch(!showMobileSearch),\n    style: {\n      marginLeft: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), showMobileSearch && React.createElement(\"div\", {\n    style: {\n      margin: '5px 15px 10px 15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    value: query,\n    style: {\n      width: '100%',\n      height: 50\n    },\n    placeholder: \"Search...\",\n    onChange: handleSearchInput,\n    onBlur: e => !query && setShowOutput(false),\n    onFocus: () => setShowOutput(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), !!output.length && showOutput && React.createElement(SearchOutput, {\n    movies: output,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }));\n\n  const desktopNavbar = () => React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, showOutput && React.createElement(\"div\", {\n    className: classes.overlay,\n    onClick: e => setShowOutput(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(CustomAppBar, {\n    position: \"sticky\",\n    style: {\n      color: \"#1FAA59\",\n      direction: 'flex',\n      backgroundColor: \"#242B2E\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    className: \"inputID\",\n    value: query,\n    placeholder: \"Search...\",\n    style: {\n      marginLeft: 30,\n      width: 250\n    },\n    onChange: handleSearchInput,\n    onBlur: e => !query && setShowOutput(false),\n    onFocus: () => setShowOutput(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    style: {\n      marginLeft: \"25vw\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: classes.brand,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Movie App \\uD83D\\uDC4B\")), React.createElement(\"div\", {\n    style: {\n      marginLeft: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(NavButton, {\n    component: Link,\n    to: \"/favorites\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(FavoriteIcon, {\n    style: {\n      marginRight: 10,\n      fill: \"#f50057\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), \"Favorites\")))), !!output.length && showOutput && React.createElement(SearchOutput, {\n    movies: output,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }));\n\n  return isMobile ? mobileNavBar() : desktopNavbar();\n}\n\nfunction bodyScrolling(enabled) {\n  document.body.style.overflow = enabled ? '' : 'hidden';\n}\n\nfunction mapStateToProps(state) {\n  return _objectSpread({}, state.search, {\n    entities: state.entities,\n    location: state.router.location.pathname\n  });\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchMovies: query => dispatch(searchMovies(query)),\n    cancelSearch: () => dispatch(cancelSearch()),\n    changeQuery: value => dispatch(changeQuery(value))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/Moviedb/src/components/Navbar.js"],"names":["React","useCallback","useEffect","useState","AppBar","Toolbar","IconButton","Menu","MenuIcon","Typography","Link","makeStyles","withStyles","SearchInput","SearchOutput","cancelSearch","changeQuery","searchMovies","connect","debounce","FavoriteIcon","VisibilityIcon","Button","SearchIcon","useMediaQuery","useTheme","useStyles","theme","menu","marginRight","brand","textDecoration","color","overlay","position","width","height","top","left","background","zIndex","CustomAppBar","root","boxShadow","NavButton","backgroundColor","spacing","marginLeft","paddingLeft","paddingRight","Navbar","props","onMenu","query","foundMovies","entities","location","classes","isMobile","breakpoints","down","showMobileSearch","setShowMobileSearch","showOutput","setShowOutput","output","map","movie","genres","genreIds","id","genresById","searchDebounce","value","handleSearchInput","e","target","length","trim","bodyScrolling","mobileNavBar","margin","desktopNavbar","direction","fill","enabled","document","body","style","overflow","mapStateToProps","state","search","router","pathname","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {Menu as MenuIcon} from \"@material-ui/icons\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {Link} from \"react-router-dom\"\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\"\nimport SearchInput from \"./SearchInput\"\nimport SearchOutput from \"./SearchOutput\"\nimport {cancelSearch, changeQuery, searchMovies} from \"../store/domains/search/search.actions\"\nimport {connect} from \"react-redux\"\nimport {debounce} from \"./utils/debounce\"\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport Button from \"@material-ui/core/Button\"\nimport SearchIcon from '@material-ui/icons/Search'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport {useTheme} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    menu: {\n        marginRight: 10\n    },\n    brand: {\n        textDecoration: 'none',\n        color: 'inherit'\n    },\n    overlay: {\n        position: 'fixed',\n        width: '100%',\n        height: '100vh',\n        top: 0,\n        left: 0,\n        background: 'rgba(9, 9, 10, 0.6)',\n        zIndex: 1\n    },\n}))\n\nconst CustomAppBar = withStyles({\n    root: {\n        color: '#333',\n        background: 'white',\n        boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)'\n    }\n})(AppBar)\n\nconst NavButton = withStyles(theme => ({\n    root: {\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n\n        \"&:hover\": {\n            backgroundColor: 'rgba(0, 0, 0, 0.08)',\n        }\n    }\n}))(Button)\n\nfunction Navbar(props) {\n    const theme = useTheme();\n    const {onMenu} = props\n    const {query, foundMovies, entities, location} = props\n    const {changeQuery, searchMovies, cancelSearch} = props\n    const classes = useStyles()\n\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n    const [showMobileSearch, setShowMobileSearch] = useState(false)\n    const [showOutput, setShowOutput] = useState(false)\n\n    // add 'genres' property\n    const output = foundMovies.map(movie => ({...movie, genres: movie.genreIds.map(id => entities.genresById[id])}))\n\n    const searchDebounce = useCallback(debounce(function (value) {\n        searchMovies(value)\n        setShowOutput(true)\n    }, 600), [searchMovies])\n\n    function handleSearchInput(e) {\n        const value = e.target.value\n        changeQuery(value)\n        cancelSearch()\n        if (value.length && value.trim().length < 2) return\n        searchDebounce(value)\n    }\n\n    // disable/enable scrolling of body element\n    useEffect(function () {\n        bodyScrolling(!(showOutput && foundMovies.length))\n    }, [showOutput, foundMovies])\n\n    // hide output when location (page) has changed\n    useEffect(function () {\n        setShowOutput(false)\n    }, [location])\n\n    const mobileNavBar = () => (\n        <React.Fragment>\n            {showOutput && <div className={classes.overlay} onClick={e => setShowOutput(false)}/>}\n            <CustomAppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton onClick={onMenu} edge=\"start\" color=\"inherit\" aria-label=\"menu\" className={classes.menu}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        <Link to=\"/\" className={classes.brand}> Movie App 👋 </Link>\n                    </Typography>\n                    <IconButton onClick={e => setShowMobileSearch(!showMobileSearch)} style={{marginLeft: 'auto'}}>\n                        <SearchIcon />\n                    </IconButton>\n                </Toolbar>\n                {showMobileSearch && <div style={{margin: '5px 15px 10px 15px'}}>\n                    <SearchInput\n                        value={query}\n                        style={{width: '100%', height: 50}}\n                        placeholder={\"Search...\"}\n                        onChange={handleSearchInput}\n                        onBlur={e => !query && setShowOutput(false) }\n                        onFocus={() => setShowOutput(true)}\n                    />\n                </div>}\n                \n            </CustomAppBar>\n            {(!!output.length && showOutput) && <SearchOutput movies={output}/>}\n        </React.Fragment>\n    )\n\n    const desktopNavbar = () => (\n        <React.Fragment>\n            {showOutput && <div className={classes.overlay} onClick={e => setShowOutput(false)}/>}\n            <CustomAppBar position=\"sticky\"\n            style ={{\n                color: \"#1FAA59\",\n                direction: 'flex',\n                backgroundColor: \"#242B2E\"\n            }}\n            >\n                <Toolbar>\n                <SearchInput\n                        className=\"inputID\"\n                        value={query}\n                        placeholder={\"Search...\"}\n                        style={{marginLeft: 30, width: 250,}}\n                        onChange={handleSearchInput}\n                        onBlur={e => !query && setShowOutput(false) }\n                        onFocus={() => setShowOutput(true)}\n                    />\n                    <Typography variant=\"h6\" noWrap\n                    style={{marginLeft: \"25vw\"}}>\n                        <Link to=\"/\" className={classes.brand}>Movie App 👋</Link>\n                    </Typography>\n                    \n                    <div style={{marginLeft: 'auto'}}>\n                        <NavButton component={Link} to=\"/favorites\" color=\"inherit\">\n                            <FavoriteIcon style={{marginRight: 10, fill: \"#f50057\"}}/>\n                            Favorites\n                        </NavButton>\n                    </div>\n                </Toolbar>\n            </CustomAppBar>\n            {(!!output.length && showOutput) && <SearchOutput movies={output}/>}\n        </React.Fragment>\n    )\n\n    return (\n        isMobile ? mobileNavBar() : desktopNavbar()\n    )\n}\n\nfunction bodyScrolling(enabled) {\n    document.body.style.overflow = enabled ? '' : 'hidden'\n}\n\nfunction mapStateToProps(state) {\n    return {\n        ...state.search,\n        entities: state.entities,\n        location: state.router.location.pathname\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        searchMovies: (query) => dispatch(searchMovies(query)),\n        cancelSearch: () => dispatch(cancelSearch()),\n        changeQuery: (value) => dispatch(changeQuery(value))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\n"]},"metadata":{},"sourceType":"module"}