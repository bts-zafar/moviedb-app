{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\moviedb-react-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\moviedb-react-app-master\\\\src\\\\components\\\\Movie.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { useParams } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport LazyLoad from 'react-lazyload';\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchMoviePage, fetchRecommendedMovies, fetchSimilarMovies } from \"../store/domains/movie/movie.actions\";\nimport { getMovie } from \"../store/utils\";\nimport MovieBrowser from \"./MovieBrowser\";\nimport MoviePagePlaceholder from \"./placeholders/MoviePagePlaceholder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeMovieVisited, toggleFavorite } from \"../store/domains/user/user.actions\";\nimport { Formatter } from \"./utils/formatter\";\nimport EmptyBlock from \"./placeholders/EmptyBlock\";\nimport TheatersIcon from '@material-ui/icons/Theaters';\nimport { BorderAllOutlined, HomeRounded } from '@material-ui/icons';\n\nfunction Movie(props) {\n  const _useParams = useParams(),\n        urlId = _useParams.id;\n\n  const isAppReady = props.isAppReady,\n        movie = props.movie,\n        fetchMovie = props.fetchMovie,\n        toggleFavorite = props.toggleFavorite,\n        makeMovieVisited = props.makeMovieVisited;\n  useEffect(function () {\n    fetchMovie(urlId);\n    window.scrollTo({\n      top: 0,\n      left: 0\n    });\n  }, [urlId, fetchMovie]);\n  useEffect(function () {\n    if (movie.isFetched) makeMovieVisited(movie.id);\n  }, [movie.id, makeMovieVisited]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(MovieInfo, {\n    movie: movie,\n    loaded: isAppReady && movie.isFetched,\n    onFavorite: toggleFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(MovieRecommendations, Object.assign({}, props, {\n    id: urlId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n}\n\nconst useStyles = makeStyles(theme => ({\n  movieContainer: {\n    paddingTop: 50,\n    paddingBottom: 50\n  },\n  backdrop: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    zIndex: -1,\n    '&:after': {\n      position: 'absolute',\n      content: \"''\",\n      display: 'block',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(30, 47, 60, 0.75)',\n      backgroundImage: 'radial-gradient(circle at 20% 50%, rgba(30, 47, 60, 0.75) 0%, rgba(48, 65, 78, 0.75) 100%)'\n    }\n  },\n  backdropImage: {\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover'\n  },\n  poster: {\n    width: '100%',\n    borderRadius: 10,\n    boxShadow: '0px 3px 20px #0000003b'\n  },\n  releaseDate: {\n    fontSize: '11pt',\n    color: '#dadde2'\n  },\n  vote: {\n    display: 'flex',\n    alignItems: 'center',\n    fontSize: '12pt'\n  },\n  genreList: {\n    listStyle: 'none',\n    padding: 0,\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  genre: {\n    cursor: 'pointer',\n    padding: '1px 6px',\n    marginRight: 10,\n    border: '1px solid white',\n    borderRadius: 4,\n    fontSize: '10pt'\n  },\n  subtitle: {\n    marginBottom: 8,\n    fontSize: '13pt'\n  },\n  crewList: {\n    listStyle: 'none',\n    padding: 0\n  }\n}));\n\nfunction MovieInfo({\n  movie,\n  loaded,\n  onFavorite\n}) {\n  const id = movie.id,\n        title = movie.title,\n        genres = movie.genres,\n        duration = movie.duration,\n        budget = movie.budget,\n        backdropImageUrl = movie.backdropImageUrl,\n        posterImageUrl = movie.posterImageUrl,\n        releaseDate = movie.releaseDate,\n        productionCountries = movie.productionCountries,\n        voteAverage = movie.voteAverage,\n        legend = movie.legend,\n        overview = movie.overview,\n        crew = movie.crew,\n        actors = movie.actors,\n        isFavorite = movie.isFavorite;\n  const classes = useStyles();\n\n  const handleClick = () => {\n    window.open('/Page404');\n  };\n\n  const poster = posterImageUrl || require('../assets/images/abstract_movie_poster.svg'); // TODO Add backdrop fallback\n  // const backdrop = backdropImageUrl\n  // TODO Sort actors and crew by their popularity/importance\n\n\n  return React.createElement(\"main\", {\n    style: {\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.backdrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.backdropImage,\n    src: backdropImageUrl,\n    alt: \"Backdrop of \" + title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(Container, {\n    className: classes.movieContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, loaded ? React.createElement(Grid, {\n    container: true,\n    spacing: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.poster,\n    src: poster,\n    alt: \"Poster of \" + title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 9,\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.releaseDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, Formatter.formatDate(releaseDate), \" (\", productionCountries.join(', '), \")\"), React.createElement(Typography, {\n    variant: \"h4\",\n    style: {\n      fontWeight: 'bold'\n    },\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, title, React.createElement(Button, {\n    style: {\n      color: \"#1FAA59\",\n      marginLeft: \"550px\",\n      borderWidth: 5,\n      borderColor: 'rgba(0,0,0,8)',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onClick: handleClick,\n    color: \"primary\",\n    variant: \"raised\",\n    \"aria-label\": \"like\",\n    contained: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(HomeRounded, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), \" Home\")), React.createElement(\"ul\", {\n    className: classes.genreList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, genres.map(genre => React.createElement(\"li\", {\n    className: classes.genre,\n    key: genre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, genre))), React.createElement(\"div\", {\n    className: classes.vote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Rating, {\n    value: voteAverage / 2,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      margin: '2px 0px 0 6px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, voteAverage, \"/10\"), React.createElement(Button, {\n    style: {\n      marginLeft: 16\n    },\n    onClick: () => onFavorite(id),\n    variant: isFavorite ? \"contained\" : \"outlined\",\n    color: \"secondary\",\n    \"aria-label\": \"like\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(FavoriteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }), \" Add to Favourites\"), React.createElement(Button, {\n    style: {\n      marginLeft: 25\n    },\n    onClick: handleClick,\n    variant: handleClick ? \"contained\" : \"outlined\",\n    color: \"primary\",\n    \"aria-label\": \"like\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(TheatersIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), \" Show Preview\")), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"div\",\n    style: {\n      marginRight: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Duration:\"), \" \", duration, \" min.\"), React.createElement(Typography, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Budget:\"), \" \", budget ? '$' + Formatter.numberWithCommas(budget) : '-')), legend && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: classes.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Legend\"), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, legend)), overview && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: classes.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Overview\"), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, overview)), crew.length && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: classes.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Crew\"), React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    component: \"ul\",\n    className: classes.crewList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, crew.slice(0, 4).map((person, i) => React.createElement(Grid, {\n    item: true,\n    md: 3,\n    sm: 6,\n    component: \"li\",\n    key: i,\n    style: {\n      paddingRight: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, person.name), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, person.department, \", \", person.job))))))) : React.createElement(MoviePagePlaceholder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  })));\n}\n\nfunction MovieRecommendations(props) {\n  const id = props.id,\n        movie = props.movie,\n        entities = props.entities,\n        user = props.user,\n        toggleFavorite = props.toggleFavorite,\n        fetchSimilarMovies = props.fetchSimilarMovies,\n        fetchRecommendedMovies = props.fetchRecommendedMovies;\n  const recommended = movie.recommendedMovies,\n        similar = movie.similarMovies;\n  const MOVIES_PER_LIST = 6;\n  const recommendedMovies = recommended.ids.slice(0, MOVIES_PER_LIST).map(id => getMovie(id, entities, user));\n  const similarMovies = similar.ids.slice(0, MOVIES_PER_LIST).map(id => getMovie(id, entities, user));\n  const fetchSimilarMoviesCb = useCallback(() => fetchSimilarMovies(id), [id, fetchSimilarMovies]);\n  const fetchRecommendedMoviesCb = useCallback(() => fetchRecommendedMovies(id), [id, fetchRecommendedMovies]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"Recommended movies\"), React.createElement(LazyLoad, {\n    height: 400,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(MovieList, {\n    isFetching: recommended.isFetching,\n    isFetched: recommended.isFetched,\n    movies: recommendedMovies,\n    amount: MOVIES_PER_LIST,\n    fetch: fetchRecommendedMoviesCb,\n    onFavorite: toggleFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }))), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"Similar movies\"), React.createElement(LazyLoad, {\n    height: 400,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(MovieList, {\n    isFetching: similar.isFetching,\n    isFetched: similar.isFetched,\n    movies: similarMovies,\n    amount: MOVIES_PER_LIST,\n    fetch: fetchSimilarMoviesCb,\n    onFavorite: toggleFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }))));\n}\n\nfunction MovieList({\n  isFetching,\n  isFetched,\n  movies = [],\n  amount,\n  fetch,\n  onFavorite\n}) {\n  useEffect(function () {\n    fetch();\n  }, [fetch]);\n  if (isFetched && !movies.length) return React.createElement(EmptyBlock, {\n    text: \"There is no data for this movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  });\n  return React.createElement(MovieBrowser, {\n    placeholdersAmount: amount,\n    isFetching: isFetching,\n    isFetched: isFetched,\n    movies: movies,\n    onFavorite: onFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  });\n}\n\nfunction mapStateToProps(state) {\n  let movie = state.movie.isFetched ? getMovie(state.movie.id, state.entities, state.user) : {};\n  movie = _objectSpread({}, movie, {}, state.movie);\n  return {\n    isAppReady: state.common.isAppReady,\n    movie: movie,\n    entities: state.entities,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchMovie: id => dispatch(fetchMoviePage(id)),\n    fetchSimilarMovies: id => dispatch(fetchSimilarMovies(id)),\n    fetchRecommendedMovies: id => dispatch(fetchRecommendedMovies(id)),\n    toggleFavorite: id => dispatch(toggleFavorite(id)),\n    makeMovieVisited: id => dispatch(makeMovieVisited(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/moviedb-react-app-master/src/components/Movie.js"],"names":["React","useCallback","useEffect","useParams","connect","LazyLoad","Container","Grid","Typography","Rating","makeStyles","fetchMoviePage","fetchRecommendedMovies","fetchSimilarMovies","getMovie","MovieBrowser","MoviePagePlaceholder","FavoriteIcon","Button","makeMovieVisited","toggleFavorite","Formatter","EmptyBlock","TheatersIcon","BorderAllOutlined","HomeRounded","Movie","props","urlId","id","isAppReady","movie","fetchMovie","window","scrollTo","top","left","isFetched","useStyles","theme","movieContainer","paddingTop","paddingBottom","backdrop","position","height","width","zIndex","content","display","background","backgroundImage","backdropImage","objectFit","poster","borderRadius","boxShadow","releaseDate","fontSize","color","vote","alignItems","genreList","listStyle","padding","flexWrap","genre","cursor","marginRight","border","subtitle","marginBottom","crewList","MovieInfo","loaded","onFavorite","title","genres","duration","budget","backdropImageUrl","posterImageUrl","productionCountries","voteAverage","legend","overview","crew","actors","isFavorite","classes","handleClick","open","require","formatDate","join","fontWeight","marginLeft","borderWidth","borderColor","justifyContent","map","margin","marginTop","numberWithCommas","length","slice","person","i","paddingRight","name","department","job","MovieRecommendations","entities","user","recommended","recommendedMovies","similar","similarMovies","MOVIES_PER_LIST","ids","fetchSimilarMoviesCb","fetchRecommendedMoviesCb","isFetching","MovieList","movies","amount","fetch","mapStateToProps","state","common","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect} from 'react'\nimport {useParams} from \"react-router\"\nimport {connect} from \"react-redux\"\nimport LazyLoad from 'react-lazyload'\nimport Container from \"@material-ui/core/Container\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Rating from \"@material-ui/lab/Rating\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {fetchMoviePage, fetchRecommendedMovies, fetchSimilarMovies} from \"../store/domains/movie/movie.actions\"\nimport {getMovie} from \"../store/utils\"\nimport MovieBrowser from \"./MovieBrowser\"\nimport MoviePagePlaceholder from \"./placeholders/MoviePagePlaceholder\"\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport Button from \"@material-ui/core/Button\"\nimport {makeMovieVisited, toggleFavorite} from \"../store/domains/user/user.actions\"\nimport {Formatter} from \"./utils/formatter\"\nimport EmptyBlock from \"./placeholders/EmptyBlock\"\nimport TheatersIcon from '@material-ui/icons/Theaters';\nimport { BorderAllOutlined, HomeRounded } from '@material-ui/icons'\n\nfunction Movie(props) {\n    const {id: urlId} = useParams()\n    const {\n        isAppReady,\n        movie,\n        fetchMovie,\n        toggleFavorite,\n        makeMovieVisited,\n    } = props\n\n    useEffect(function () {\n        fetchMovie(urlId)\n        window.scrollTo({top: 0, left: 0})\n    }, [urlId, fetchMovie])\n\n    useEffect(function () {\n        if(movie.isFetched) makeMovieVisited(movie.id)\n    }, [movie.id, makeMovieVisited])\n\n    return (\n        <React.Fragment>\n            <MovieInfo movie={movie} loaded={isAppReady && movie.isFetched} onFavorite={toggleFavorite}/>\n            <MovieRecommendations {...props} id={urlId}/>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    movieContainer: {\n        paddingTop: 50,\n        paddingBottom: 50,\n    },\n    backdrop: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: -1,\n        '&:after': {\n            position: 'absolute',\n            content: \"''\",\n            display: 'block',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'rgba(30, 47, 60, 0.75)',\n            backgroundImage: 'radial-gradient(circle at 20% 50%, rgba(30, 47, 60, 0.75) 0%, rgba(48, 65, 78, 0.75) 100%)'\n        }\n    },\n    backdropImage: {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n    },\n    poster: {\n        width: '100%',\n        borderRadius: 10,\n        boxShadow: '0px 3px 20px #0000003b',\n    },\n    releaseDate: {\n        fontSize: '11pt',\n        color: '#dadde2'\n    },\n    vote: {\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '12pt'\n    },\n    genreList: {\n        listStyle: 'none',\n        padding: 0,\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    genre: {\n        cursor: 'pointer',\n        padding: '1px 6px',\n        marginRight: 10,\n        border: '1px solid white',\n        borderRadius: 4,\n        fontSize: '10pt'\n    },\n    subtitle: {\n        marginBottom: 8,\n        fontSize: '13pt'\n    },\n    crewList: {\n        listStyle: 'none',\n        padding: 0,\n    },\n}))\n\nfunction MovieInfo({movie, loaded, onFavorite}) {\n    const {\n        id,\n        title,\n        genres,\n        duration,\n        budget,\n        backdropImageUrl,\n        posterImageUrl,\n        releaseDate,\n        productionCountries,\n        voteAverage,\n        legend,\n        overview,\n        crew,\n        actors,\n\n        isFavorite\n    } = movie\n\n    const classes = useStyles()\n\n    const handleClick = () => {\n        window.open('/Page404')\n    }\n\n    const poster = posterImageUrl || require('../assets/images/abstract_movie_poster.svg')\n    // TODO Add backdrop fallback\n    // const backdrop = backdropImageUrl\n\n    // TODO Sort actors and crew by their popularity/importance\n\n    return (\n        <main style={{position: 'relative'}}>\n            <div className={classes.backdrop}>\n                <img className={classes.backdropImage} src={backdropImageUrl} alt={\"Backdrop of \" + title}/>\n            </div>\n            <Container className={classes.movieContainer}>\n                {loaded ?\n                    <Grid container spacing={7}>\n                        <Grid item md={3}>\n                            <img className={classes.poster} src={poster} alt={\"Poster of \" + title}/>\n                        </Grid>\n                        <Grid item md={9} style={{color: 'white'}}>\n                            <div className={classes.releaseDate}>\n                                {Formatter.formatDate(releaseDate)} ({productionCountries.join(', ')})\n                            </div>\n                            <Typography variant={\"h4\"} style={{fontWeight: 'bold'}} component={\"h1\"}>\n                                {title}              \n                                <Button\n                                style={{\n                                    color: \"#1FAA59\",\n                                    marginLeft : \"550px\",\n                                    borderWidth: 5,\n       borderColor:'rgba(0,0,0,8)',\n       alignItems:'center',\n       justifyContent:'center',\n                                    \n                                }}\n                                 onClick={handleClick}\n                                 color=\"primary\"\n                                 variant=\"raised\"\n                                 aria-label=\"like\"\n                                 contained = \"outlined\"\n                                 >\n                                   <HomeRounded /> Home\n                                </Button>\n                            </Typography>\n                               \n                            <ul className={classes.genreList}>\n                                {genres.map(genre => (\n                                    <li className={classes.genre} key={genre}>{genre}</li>\n                                ))}\n                            </ul>\n                            <div className={classes.vote}>\n                                <Rating value={voteAverage / 2} readOnly/>\n                                <span style={{margin: '2px 0px 0 6px'}}>{voteAverage}/10</span>\n                                <Button\n                                    style={{marginLeft: 16}}\n                                    onClick={() => onFavorite(id)}\n                                    variant={isFavorite ? \"contained\" : \"outlined\"}\n                                    color=\"secondary\"\n                                    aria-label=\"like\"\n                                >\n                                    <FavoriteIcon/> Add to Favourites\n                                </Button>\n                                <Button\n                                 style={{marginLeft: 25}}\n                                 onClick={handleClick}\n                                 variant={handleClick ? \"contained\" : \"outlined\"}\n                                 color=\"primary\"\n                                 aria-label=\"like\"\n                                >\n                                   <TheatersIcon /> Show Preview\n                                </Button>\n                            </div>\n                            <div style={{marginTop: 10}}>\n                                <Typography component={\"div\"} style={{marginRight: 15}}>\n                                    <b>Duration:</b> {duration} min.\n                                </Typography>\n                                <Typography component={\"div\"}>\n                                    <b>Budget:</b> {budget ? '$' + Formatter.numberWithCommas(budget) : '-'}\n                                </Typography>\n                            </div>\n                            {legend && <React.Fragment>\n                                <h3 className={classes.subtitle}>Legend</h3>\n                                <Typography variant={\"body1\"}>{legend}</Typography>\n                            </React.Fragment>}\n                            {overview && <React.Fragment>\n                                <h3 className={classes.subtitle}>Overview</h3>\n                                <Typography variant={\"body1\"}>{overview}</Typography>\n                            </React.Fragment>}\n                            {crew.length && <React.Fragment>\n                                <h3 className={classes.subtitle}>Crew</h3>\n                                <Grid container spacing={3} component=\"ul\" className={classes.crewList}>\n                                    {crew.slice(0, 4).map((person, i) => (\n                                        <Grid item md={3} sm={6} component=\"li\" key={i} style={{paddingRight: 16}}>\n                                            <Typography variant={\"body2\"}\n                                                        style={{fontWeight: 'bold'}}>{person.name}</Typography>\n                                            <Typography\n                                                variant={\"body2\"}>{person.department}, {person.job}</Typography>\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </React.Fragment>}\n                        </Grid>\n                    </Grid> :\n                    <MoviePagePlaceholder/>}\n            </Container>\n        </main>\n    )\n}\n\nfunction MovieRecommendations(props) {\n    const {\n        id,\n\n        movie,\n        entities,\n        user,\n\n        toggleFavorite,\n        fetchSimilarMovies,\n        fetchRecommendedMovies,\n    } = props\n\n    const {recommendedMovies: recommended, similarMovies: similar} = movie\n\n    const MOVIES_PER_LIST = 6\n\n    const recommendedMovies = recommended.ids.slice(0, MOVIES_PER_LIST).map(id => getMovie(id, entities, user))\n    const similarMovies = similar.ids.slice(0, MOVIES_PER_LIST).map(id => getMovie(id, entities, user))\n\n    const fetchSimilarMoviesCb = useCallback(() => fetchSimilarMovies(id), [id, fetchSimilarMovies])\n    const fetchRecommendedMoviesCb = useCallback(() => fetchRecommendedMovies(id), [id, fetchRecommendedMovies])\n\n    return (\n        <Container>\n            <section>\n                <h2>Recommended movies</h2>\n                <LazyLoad height={400}>\n                    <MovieList\n                        isFetching={recommended.isFetching}\n                        isFetched={recommended.isFetched}\n                        movies={recommendedMovies}\n                        amount={MOVIES_PER_LIST}\n                        fetch={fetchRecommendedMoviesCb}\n                        onFavorite={toggleFavorite}\n                    />\n                </LazyLoad>\n            </section>\n            <section>\n                <h2>Similar movies</h2>\n                <LazyLoad height={400}>\n                    <MovieList\n                        isFetching={similar.isFetching}\n                        isFetched={similar.isFetched}\n                        movies={similarMovies}\n                        amount={MOVIES_PER_LIST}\n                        fetch={fetchSimilarMoviesCb}\n                        onFavorite={toggleFavorite}\n                    />\n                </LazyLoad>\n            </section>\n        </Container>\n    )\n}\n\n\nfunction MovieList({isFetching, isFetched, movies = [], amount, fetch, onFavorite}) {\n\n    useEffect(function () {\n        fetch()\n    }, [fetch])\n\n    if (isFetched && !movies.length) return (\n        <EmptyBlock text={\"There is no data for this movie\"} />\n    )\n\n    return (\n        <MovieBrowser placeholdersAmount={amount}\n                      isFetching={isFetching}\n                      isFetched={isFetched}\n                      movies={movies}\n                      onFavorite={onFavorite}\n        />\n    )\n}\n\nfunction mapStateToProps(state) {\n    let movie = state.movie.isFetched ? getMovie(state.movie.id, state.entities, state.user) : {}\n    movie = {...movie, ...state.movie}\n    return {\n        isAppReady: state.common.isAppReady,\n        movie: movie,\n        entities: state.entities,\n        user: state.user\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchMovie: (id) => dispatch(fetchMoviePage(id)),\n        fetchSimilarMovies: (id) => dispatch(fetchSimilarMovies(id)),\n        fetchRecommendedMovies: (id) => dispatch(fetchRecommendedMovies(id)),\n        toggleFavorite: (id) => dispatch(toggleFavorite(id)),\n        makeMovieVisited: (id) => dispatch(makeMovieVisited(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie)\n"]},"metadata":{},"sourceType":"module"}