{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\moviedb-react-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { POPULAR_MOVIES_FETCH_SUCCESS, TOP_RATED_MOVIES_FETCH_SUCCESS, UPCOMING_MOVIES_FETCH_SUCCESS } from \"../home/home.types\";\nimport { GENRES_FETCH_SUCCESS } from \"../common/common.types\";\nimport { MOVIE_PAGE_FETCH_SUCCESS, RECOMMENDED_MOVIES_FETCH_SUCCESS, SIMILAR_MOVIES_FETCH_SUCCESS } from \"../movie/movie.types\";\nimport { MOVIE_FETCH_SUCCESS } from \"./entities.types\";\nimport { prepareMovie } from \"../../utils\";\nconst initialState = {\n  moviesById: {},\n  genresById: {}\n};\nexport function entitiesReducer(state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GENRES_FETCH_SUCCESS:\n      {\n        const genresById = {};\n\n        for (let genre of payload.genres) {\n          genresById[genre.id] = genre.name;\n        }\n\n        return _objectSpread({}, state, {\n          genresById: genresById\n        });\n      }\n\n    case POPULAR_MOVIES_FETCH_SUCCESS:\n    case TOP_RATED_MOVIES_FETCH_SUCCESS:\n    case UPCOMING_MOVIES_FETCH_SUCCESS:\n    case SIMILAR_MOVIES_FETCH_SUCCESS:\n    case RECOMMENDED_MOVIES_FETCH_SUCCESS:\n      {\n        const moviesById = _objectSpread({}, state.moviesById);\n\n        for (let movie of payload.results) {\n          const preparedMovie = prepareMovie({\n            raw: movie,\n            extended: false\n          });\n\n          if (moviesById[movie.id] && moviesById[movie.id].isExtendedDataLoaded) {\n            moviesById[movie.id] = _objectSpread({}, moviesById[movie.id], {}, preparedMovie);\n          } else {\n            moviesById[movie.id] = preparedMovie;\n          }\n\n          moviesById[movie.id].fetchDate = new Date();\n        }\n\n        return _objectSpread({}, state, {\n          moviesById: moviesById\n        });\n      }\n\n    case MOVIE_PAGE_FETCH_SUCCESS:\n    case MOVIE_FETCH_SUCCESS:\n      {\n        const movie = prepareMovie({\n          raw: payload,\n          extended: true\n        });\n\n        const moviesById = _objectSpread({}, state.moviesById);\n\n        moviesById[movie.id] = movie;\n        moviesById[movie.id].fetchDate = new Date();\n        return _objectSpread({}, state, {\n          moviesById: moviesById\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/moviedb-react-app-master/src/store/domains/entities/entities.reducer.js"],"names":["POPULAR_MOVIES_FETCH_SUCCESS","TOP_RATED_MOVIES_FETCH_SUCCESS","UPCOMING_MOVIES_FETCH_SUCCESS","GENRES_FETCH_SUCCESS","MOVIE_PAGE_FETCH_SUCCESS","RECOMMENDED_MOVIES_FETCH_SUCCESS","SIMILAR_MOVIES_FETCH_SUCCESS","MOVIE_FETCH_SUCCESS","prepareMovie","initialState","moviesById","genresById","entitiesReducer","state","action","type","payload","genre","genres","id","name","movie","results","preparedMovie","raw","extended","isExtendedDataLoaded","fetchDate","Date"],"mappings":";AAAA,SACIA,4BADJ,EAEIC,8BAFJ,EAGIC,6BAHJ,QAIO,oBAJP;AAKA,SAAQC,oBAAR,QAAmC,wBAAnC;AACA,SACIC,wBADJ,EAEIC,gCAFJ,EAGIC,4BAHJ,QAIO,sBAJP;AAKA,SAAQC,mBAAR,QAAkC,kBAAlC;AACA,SAAQC,YAAR,QAA2B,aAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;AAKA,OAAO,SAASC,eAAT,CAAyBC,KAAK,GAAGJ,YAAjC,EAA+CK,MAA/C,EAAuD;AAAA,QACnDC,IADmD,GAClCD,MADkC,CACnDC,IADmD;AAAA,QAC7CC,OAD6C,GAClCF,MADkC,CAC7CE,OAD6C;;AAE1D,UAAQD,IAAR;AACI,SAAKZ,oBAAL;AAA2B;AACvB,cAAMQ,UAAU,GAAG,EAAnB;;AACA,aAAK,IAAIM,KAAT,IAAkBD,OAAO,CAACE,MAA1B,EAAkC;AAC9BP,UAAAA,UAAU,CAACM,KAAK,CAACE,EAAP,CAAV,GAAuBF,KAAK,CAACG,IAA7B;AACH;;AACD,iCAAWP,KAAX;AAAkBF,UAAAA,UAAU,EAAEA;AAA9B;AACH;;AACD,SAAKX,4BAAL;AACA,SAAKC,8BAAL;AACA,SAAKC,6BAAL;AACA,SAAKI,4BAAL;AACA,SAAKD,gCAAL;AAAuC;AACnC,cAAMK,UAAU,qBAAOG,KAAK,CAACH,UAAb,CAAhB;;AACA,aAAK,IAAIW,KAAT,IAAkBL,OAAO,CAACM,OAA1B,EAAmC;AAC/B,gBAAMC,aAAa,GAAGf,YAAY,CAAC;AAACgB,YAAAA,GAAG,EAAEH,KAAN;AAAaI,YAAAA,QAAQ,EAAE;AAAvB,WAAD,CAAlC;;AACA,cAAGf,UAAU,CAACW,KAAK,CAACF,EAAP,CAAV,IAAwBT,UAAU,CAACW,KAAK,CAACF,EAAP,CAAV,CAAqBO,oBAAhD,EAAsE;AAClEhB,YAAAA,UAAU,CAACW,KAAK,CAACF,EAAP,CAAV,qBAA2BT,UAAU,CAACW,KAAK,CAACF,EAAP,CAArC,MAAoDI,aAApD;AACH,WAFD,MAEO;AACHb,YAAAA,UAAU,CAACW,KAAK,CAACF,EAAP,CAAV,GAAuBI,aAAvB;AACH;;AACDb,UAAAA,UAAU,CAACW,KAAK,CAACF,EAAP,CAAV,CAAqBQ,SAArB,GAAiC,IAAIC,IAAJ,EAAjC;AACH;;AACD,iCAAWf,KAAX;AAAkBH,UAAAA,UAAU,EAAEA;AAA9B;AACH;;AACD,SAAKN,wBAAL;AACA,SAAKG,mBAAL;AAA0B;AACtB,cAAMc,KAAK,GAAGb,YAAY,CAAC;AAACgB,UAAAA,GAAG,EAAER,OAAN;AAAeS,UAAAA,QAAQ,EAAE;AAAzB,SAAD,CAA1B;;AACA,cAAMf,UAAU,qBAAOG,KAAK,CAACH,UAAb,CAAhB;;AACAA,QAAAA,UAAU,CAACW,KAAK,CAACF,EAAP,CAAV,GAAuBE,KAAvB;AACAX,QAAAA,UAAU,CAACW,KAAK,CAACF,EAAP,CAAV,CAAqBQ,SAArB,GAAiC,IAAIC,IAAJ,EAAjC;AACA,iCAAWf,KAAX;AAAkBH,UAAAA,UAAU,EAAEA;AAA9B;AACH;;AACD;AACI,aAAOG,KAAP;AAlCR;AAoCH","sourcesContent":["import {\n    POPULAR_MOVIES_FETCH_SUCCESS,\n    TOP_RATED_MOVIES_FETCH_SUCCESS,\n    UPCOMING_MOVIES_FETCH_SUCCESS\n} from \"../home/home.types\"\nimport {GENRES_FETCH_SUCCESS} from \"../common/common.types\"\nimport {\n    MOVIE_PAGE_FETCH_SUCCESS,\n    RECOMMENDED_MOVIES_FETCH_SUCCESS,\n    SIMILAR_MOVIES_FETCH_SUCCESS\n} from \"../movie/movie.types\"\nimport {MOVIE_FETCH_SUCCESS} from \"./entities.types\"\nimport {prepareMovie} from \"../../utils\"\n\nconst initialState = {\n    moviesById: {},\n    genresById: {}\n}\n\nexport function entitiesReducer(state = initialState, action) {\n    const {type, payload} = action\n    switch (type) {\n        case GENRES_FETCH_SUCCESS: {\n            const genresById = {}\n            for (let genre of payload.genres) {\n                genresById[genre.id] = genre.name\n            }\n            return {...state, genresById: genresById}\n        }\n        case POPULAR_MOVIES_FETCH_SUCCESS:\n        case TOP_RATED_MOVIES_FETCH_SUCCESS:\n        case UPCOMING_MOVIES_FETCH_SUCCESS:\n        case SIMILAR_MOVIES_FETCH_SUCCESS:\n        case RECOMMENDED_MOVIES_FETCH_SUCCESS: {\n            const moviesById = {...state.moviesById}\n            for (let movie of payload.results) {\n                const preparedMovie = prepareMovie({raw: movie, extended: false})\n                if(moviesById[movie.id] && moviesById[movie.id].isExtendedDataLoaded) {\n                    moviesById[movie.id] = {...moviesById[movie.id], ...preparedMovie}\n                } else {\n                    moviesById[movie.id] = preparedMovie\n                }\n                moviesById[movie.id].fetchDate = new Date()\n            }\n            return {...state, moviesById: moviesById}\n        }\n        case MOVIE_PAGE_FETCH_SUCCESS:\n        case MOVIE_FETCH_SUCCESS: {\n            const movie = prepareMovie({raw: payload, extended: true})\n            const moviesById = {...state.moviesById}\n            moviesById[movie.id] = movie\n            moviesById[movie.id].fetchDate = new Date()\n            return {...state, moviesById: moviesById}\n        }\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}