{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\Moviedb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nexport function prepareImage(url, size = 'w500') {\n  // size = 'original'\n  if (!url) return null;\n  return `https://image.tmdb.org/t/p/${size}${url}`;\n}\nexport function getMovie(id, entities, user) {\n  const movie = entities.moviesById[id];\n  if (!movie) return null;\n  return _objectSpread({}, movie, {\n    genres: movie.genreIds.map(id => entities.genresById[id]),\n    isFavorite: user.favoriteMovieIds.indexOf(id) !== -1\n  });\n}\nexport function prepareMovie({\n  raw = {},\n  posterSize = 'w500',\n  backdropSize = 'original',\n  extended = false\n}) {\n  const basicData = {\n    id: raw.id,\n    title: raw.title,\n    overview: raw.overview,\n    genreIds: raw.genres ? raw.genres.map(i => i.id) : raw.genre_ids,\n    voteAverage: raw.vote_average,\n    releaseDate: new Date(raw.release_date),\n    posterImageUrl: prepareImage(raw.poster_path, posterSize),\n    backdropImageUrl: prepareImage(raw.backdrop_path, backdropSize),\n    popularity: raw.popularity\n  };\n  const extendedData = !extended ? null : {\n    duration: raw.runtime,\n    budget: raw.budget,\n    productionCountries: (raw.production_countries || []).map(c => c.name),\n    legend: raw.tagline,\n    actors: (raw.credits || []).cast.map(cast => ({\n      id: cast.id,\n      name: cast.name,\n      character: cast.character,\n      gender: cast.gender,\n      photo: prepareImage(cast.profile_path)\n    })),\n    crew: (raw.credits || []).crew.map(person => ({\n      id: person.id,\n      department: person.department,\n      job: person.job,\n      gender: person.gender,\n      name: person.name,\n      photo: prepareImage(person.profile_path)\n    })),\n    isExtendedDataLoaded: true\n  };\n  return Object.assign(basicData, extendedData);\n}","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/Moviedb/src/store/utils.js"],"names":["prepareImage","url","size","getMovie","id","entities","user","movie","moviesById","genres","genreIds","map","genresById","isFavorite","favoriteMovieIds","indexOf","prepareMovie","raw","posterSize","backdropSize","extended","basicData","title","overview","i","genre_ids","voteAverage","vote_average","releaseDate","Date","release_date","posterImageUrl","poster_path","backdropImageUrl","backdrop_path","popularity","extendedData","duration","runtime","budget","productionCountries","production_countries","c","name","legend","tagline","actors","credits","cast","character","gender","photo","profile_path","crew","person","department","job","isExtendedDataLoaded","Object","assign"],"mappings":"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","sourcesContent":["export function prepareImage(url, size = 'w500') {\n    // size = 'original'\n    if (!url) return null\n    return `https://image.tmdb.org/t/p/${size}${url}`\n}\n\nexport function getMovie(id, entities, user) {\n    const movie = entities.moviesById[id]\n    if(!movie) return null\n    return {\n        ...movie,\n        genres: movie.genreIds.map(id => entities.genresById[id]),\n        isFavorite: user.favoriteMovieIds.indexOf(id) !== -1\n    }\n}\n\nexport function prepareMovie({raw = {}, posterSize = 'w500', backdropSize = 'original', extended = false}) {\n    const basicData = {\n        id: raw.id,\n        title: raw.title,\n        overview: raw.overview,\n        genreIds: raw.genres ? raw.genres.map(i => i.id) : raw.genre_ids,\n        voteAverage: raw.vote_average,\n        releaseDate: new Date(raw.release_date),\n        posterImageUrl: prepareImage(raw.poster_path, posterSize),\n        backdropImageUrl: prepareImage(raw.backdrop_path, backdropSize),\n        popularity: raw.popularity\n    }\n    const extendedData = !extended ? null : {\n        duration: raw.runtime,\n        budget: raw.budget,\n        productionCountries: (raw.production_countries || []).map(c => c.name),\n        legend: raw.tagline,\n        actors: (raw.credits || []).cast.map(cast => ({\n            id: cast.id,\n            name: cast.name,\n            character: cast.character,\n            gender: cast.gender,\n            photo: prepareImage(cast.profile_path)\n        })),\n        crew: (raw.credits || []).crew.map(person => ({\n            id: person.id,\n            department: person.department,\n            job: person.job,\n            gender: person.gender,\n            name: person.name,\n            photo: prepareImage(person.profile_path)\n        })),\n\n        isExtendedDataLoaded: true\n    }\n    return Object.assign(basicData, extendedData)\n}\n"]},"metadata":{},"sourceType":"module"}