{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\Moviedb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n// TODO Should I put this reducer in another place?\nconst moviesFetchInitialState = {\n  ids: [],\n  isFetching: true,\n  isFetched: false,\n  totalMovies: 0\n}; // Sub-reducer\n// ---\n// Used for widget-like components that load list of movies.\n// The reducer keeps only the ids of movies so you should save the full data of movies in 'entities' reducer.\n// TODO Think of a better name\n\nexport function moviesFetchReducer(prefix, state = moviesFetchInitialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case prefix + \"_FETCH_REQUEST\":\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case prefix + \"_FETCH_SUCCESS\":\n      const totalMovies = payload.total_results,\n            movies = payload.results;\n      const movieIds = movies.map(movie => movie.id);\n      return {\n        ids: [...state.ids, ...movieIds],\n        isFetching: false,\n        isFetched: true,\n        totalMovies: totalMovies\n      };\n\n    case prefix + \"_FETCH_FAIL\":\n      return _objectSpread({}, state, {\n        isFetching: false,\n        isFetched: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/Moviedb/src/store/domains/shared.js"],"names":["moviesFetchInitialState","ids","isFetching","isFetched","totalMovies","moviesFetchReducer","prefix","state","action","type","payload","total_results","movies","results","movieIds","map","movie","id"],"mappings":";AAAA;AAEA,MAAMA,uBAAuB,GAAG;AAC5BC,EAAAA,GAAG,EAAE,EADuB;AAE5BC,EAAAA,UAAU,EAAE,IAFgB;AAG5BC,EAAAA,SAAS,EAAE,KAHiB;AAI5BC,EAAAA,WAAW,EAAE;AAJe,CAAhC,C,CAOA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,KAAK,GAAGP,uBAA5C,EAAqEQ,MAArE,EAA6E;AAAA,QACzEC,IADyE,GACxDD,MADwD,CACzEC,IADyE;AAAA,QACnEC,OADmE,GACxDF,MADwD,CACnEE,OADmE;;AAEhF,UAAQD,IAAR;AACI,SAAKH,MAAM,GAAG,gBAAd;AACI,+BAAWC,KAAX;AAAkBL,QAAAA,UAAU,EAAE;AAA9B;;AACJ,SAAKI,MAAM,GAAG,gBAAd;AAAA,YAC0BF,WAD1B,GAC0DM,OAD1D,CACWC,aADX;AAAA,YACgDC,MADhD,GAC0DF,OAD1D,CACuCG,OADvC;AAEI,YAAMC,QAAQ,GAAGF,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAIA,KAAK,CAACC,EAA1B,CAAjB;AACA,aAAO;AACHhB,QAAAA,GAAG,EAAE,CAAC,GAAGM,KAAK,CAACN,GAAV,EAAe,GAAGa,QAAlB,CADF;AAEHZ,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,SAAS,EAAE,IAHR;AAIHC,QAAAA,WAAW,EAAEA;AAJV,OAAP;;AAMJ,SAAKE,MAAM,GAAG,aAAd;AACI,+BAAWC,KAAX;AAAkBL,QAAAA,UAAU,EAAE,KAA9B;AAAqCC,QAAAA,SAAS,EAAE;AAAhD;;AACJ;AACI,aAAOI,KAAP;AAfR;AAiBH","sourcesContent":["// TODO Should I put this reducer in another place?\n\nconst moviesFetchInitialState = {\n    ids: [],\n    isFetching: true,\n    isFetched: false,\n    totalMovies: 0\n}\n\n// Sub-reducer\n// ---\n// Used for widget-like components that load list of movies.\n// The reducer keeps only the ids of movies so you should save the full data of movies in 'entities' reducer.\n// TODO Think of a better name\nexport function moviesFetchReducer(prefix, state = moviesFetchInitialState, action) {\n    const {type, payload} = action\n    switch (type) {\n        case prefix + \"_FETCH_REQUEST\":\n            return {...state, isFetching: true}\n        case prefix + \"_FETCH_SUCCESS\":\n            const {total_results: totalMovies, results: movies} = payload\n            const movieIds = movies.map(movie => movie.id)\n            return {\n                ids: [...state.ids, ...movieIds],\n                isFetching: false,\n                isFetched: true,\n                totalMovies: totalMovies\n            }\n        case prefix + \"_FETCH_FAIL\":\n            return {...state, isFetching: false, isFetched: false}\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}