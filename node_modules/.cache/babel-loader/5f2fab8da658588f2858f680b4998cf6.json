{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\moviedb-react-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{SEARCH_CANCEL,SEARCH_FAIL,SEARCH_QUERY_CHANGED,SEARCH_REQUEST,SEARCH_SUCCESS}from\"./search.types\";import{prepareMovie}from\"../../utils\";import{LOCATION_CHANGE}from'connected-react-router';var initialSearchState={query:'',isFetching:false,isFetched:false,foundMovies:[]};// sub-reducer\nexport function searchReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialSearchState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case LOCATION_CHANGE:return initialSearchState;case SEARCH_QUERY_CHANGED:return _objectSpread({},state,{query:payload.query});case SEARCH_REQUEST:return _objectSpread({},state,{isFetching:true,isFetched:false,foundMovies:[]});case SEARCH_SUCCESS:{var movies=payload.results.map(function(movie){return prepareMovie({raw:movie,posterSize:'w154'});});movies=filterEmptyMovies(movies).sort(function(a,b){return b.popularity-a.popularity;});return _objectSpread({},state,{isFetching:false,isFetched:true,foundMovies:movies});}case SEARCH_FAIL:case SEARCH_CANCEL:return _objectSpread({},state,{isFetching:false,isFetched:false,foundMovies:[]});default:return state;}}function filterEmptyMovies(movies){return movies.filter(function(m){return!!m.title&&m.popularity>0.25;});}","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/moviedb-react-app-master/src/store/domains/search/search.reducer.js"],"names":["SEARCH_CANCEL","SEARCH_FAIL","SEARCH_QUERY_CHANGED","SEARCH_REQUEST","SEARCH_SUCCESS","prepareMovie","LOCATION_CHANGE","initialSearchState","query","isFetching","isFetched","foundMovies","searchReducer","state","action","type","payload","movies","results","map","movie","raw","posterSize","filterEmptyMovies","sort","a","b","popularity","filter","m","title"],"mappings":"8IAAA,OAAQA,aAAR,CAAuBC,WAAvB,CAAoCC,oBAApC,CAA0DC,cAA1D,CAA0EC,cAA1E,KAA+F,gBAA/F,CACA,OAAQC,YAAR,KAA2B,aAA3B,CACA,OAAQC,eAAR,KAA8B,wBAA9B,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,CACvBC,KAAK,CAAE,EADgB,CAEvBC,UAAU,CAAE,KAFW,CAGvBC,SAAS,CAAE,KAHY,CAIvBC,WAAW,CAAE,EAJU,CAA3B,CAOA;AACA,MAAO,SAASC,CAAAA,aAAT,EAA2D,IAApCC,CAAAA,KAAoC,2DAA5BN,kBAA4B,IAARO,CAAAA,MAAQ,8CACvDC,CAAAA,IADuD,CACtCD,MADsC,CACvDC,IADuD,CACjDC,OADiD,CACtCF,MADsC,CACjDE,OADiD,CAE9D,OAAQD,IAAR,EACI,IAAKT,CAAAA,eAAL,CACI,MAAOC,CAAAA,kBAAP,CACJ,IAAKL,CAAAA,oBAAL,CACI,wBAAWW,KAAX,EAAkBL,KAAK,CAAEQ,OAAO,CAACR,KAAjC,GACJ,IAAKL,CAAAA,cAAL,CACI,wBAAWU,KAAX,EAAkBJ,UAAU,CAAE,IAA9B,CAAoCC,SAAS,CAAE,KAA/C,CAAsDC,WAAW,CAAE,EAAnE,GACJ,IAAKP,CAAAA,cAAL,CAAqB,CACjB,GAAIa,CAAAA,MAAM,CAAGD,OAAO,CAACE,OAAR,CAAgBC,GAAhB,CAAoB,SAAAC,KAAK,QAAIf,CAAAA,YAAY,CAAC,CAACgB,GAAG,CAAED,KAAN,CAAaE,UAAU,CAAE,MAAzB,CAAD,CAAhB,EAAzB,CAAb,CACAL,MAAM,CAAGM,iBAAiB,CAACN,MAAD,CAAjB,CAA0BO,IAA1B,CAA+B,SAACC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAACC,UAAF,CAAeF,CAAC,CAACE,UAA3B,EAA/B,CAAT,CACA,wBACOd,KADP,EAEIJ,UAAU,CAAE,KAFhB,CAGIC,SAAS,CAAE,IAHf,CAIIC,WAAW,CAAEM,MAJjB,GAMH,CACD,IAAKhB,CAAAA,WAAL,CACA,IAAKD,CAAAA,aAAL,CACI,wBAAWa,KAAX,EAAkBJ,UAAU,CAAE,KAA9B,CAAqCC,SAAS,CAAE,KAAhD,CAAuDC,WAAW,CAAE,EAApE,GACJ,QACI,MAAOE,CAAAA,KAAP,CArBR,CAuBH,CAED,QAASU,CAAAA,iBAAT,CAA2BN,MAA3B,CAAmC,CAC/B,MAAOA,CAAAA,MAAM,CAACW,MAAP,CAAc,SAAAC,CAAC,CAAI,CACtB,MAAO,CAAC,CAACA,CAAC,CAACC,KAAJ,EAAaD,CAAC,CAACF,UAAF,CAAe,IAAnC,CACH,CAFM,CAAP,CAGH","sourcesContent":["import {SEARCH_CANCEL, SEARCH_FAIL, SEARCH_QUERY_CHANGED, SEARCH_REQUEST, SEARCH_SUCCESS} from \"./search.types\"\nimport {prepareMovie} from \"../../utils\"\nimport {LOCATION_CHANGE} from 'connected-react-router';\n\nconst initialSearchState = {\n    query: '',\n    isFetching: false,\n    isFetched: false,\n    foundMovies: []\n}\n\n// sub-reducer\nexport function searchReducer(state = initialSearchState, action) {\n    const {type, payload} = action\n    switch (type) {\n        case LOCATION_CHANGE:\n            return initialSearchState\n        case SEARCH_QUERY_CHANGED:\n            return {...state, query: payload.query}\n        case SEARCH_REQUEST:\n            return {...state, isFetching: true, isFetched: false, foundMovies: []}\n        case SEARCH_SUCCESS: {\n            let movies = payload.results.map(movie => prepareMovie({raw: movie, posterSize: 'w154'}))\n            movies = filterEmptyMovies(movies).sort((a, b) => b.popularity - a.popularity)\n            return {\n                ...state,\n                isFetching: false,\n                isFetched: true,\n                foundMovies: movies\n            }\n        }\n        case SEARCH_FAIL:\n        case SEARCH_CANCEL:\n            return {...state, isFetching: false, isFetched: false, foundMovies: []}\n        default:\n            return state\n    }\n}\n\nfunction filterEmptyMovies(movies) {\n    return movies.filter(m => {\n        return !!m.title && m.popularity > 0.25\n    })\n}\n"]},"metadata":{},"sourceType":"module"}