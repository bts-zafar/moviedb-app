{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{withSnackbar}from'notistack';import{removeError as _removeError}from\"../store/domains/ui/ui.actions\";import{Button}from\"@material-ui/core\";var displayed=[];function Notifier(_ref){var enqueueSnackbar=_ref.enqueueSnackbar,closeSnackbar=_ref.closeSnackbar,removeError=_ref.removeError,_ref$errors=_ref.errors,errors=_ref$errors===void 0?[]:_ref$errors;useEffect(function(){errors.forEach(function(error){if(displayed.includes(error.id))return;enqueueSnackbar(error.message,{key:error.id,variant:\"error\",action:function action(key){return React.createElement(Button,{onClick:function onClick(){return closeSnackbar(key);}},\"OK\");},onExited:function onExited(event,reason,key){displayed.splice(displayed.indexOf(error.id),1);removeError(error);}});displayed.push(error.id);});},[errors,closeSnackbar,enqueueSnackbar,removeError]);return null;}function mapStateToProps(state){return{errors:state.ui.errors};}function mapDispatchToProps(dispatch){return{removeError:function removeError(id){return dispatch(_removeError(id));}};}export default withSnackbar(connect(mapStateToProps,mapDispatchToProps)(Notifier));","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/Moviedb/src/components/Notifier.js"],"names":["React","useEffect","connect","withSnackbar","removeError","Button","displayed","Notifier","enqueueSnackbar","closeSnackbar","errors","forEach","error","includes","id","message","key","variant","action","onExited","event","reason","splice","indexOf","push","mapStateToProps","state","ui","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,YAAR,KAA2B,WAA3B,CACA,OAAQC,WAAW,GAAXA,CAAAA,YAAR,KAA0B,gCAA1B,CACA,OAAQC,MAAR,KAAqB,mBAArB,CAEA,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CAEA,QAASC,CAAAA,QAAT,MAA8E,IAA3DC,CAAAA,eAA2D,MAA3DA,eAA2D,CAA1CC,aAA0C,MAA1CA,aAA0C,CAA3BL,WAA2B,MAA3BA,WAA2B,kBAAdM,MAAc,CAAdA,MAAc,sBAAL,EAAK,aAE1ET,SAAS,CAAC,UAAY,CAClBS,MAAM,CAACC,OAAP,CAAe,SAAAC,KAAK,CAAI,CACpB,GAAGN,SAAS,CAACO,QAAV,CAAmBD,KAAK,CAACE,EAAzB,CAAH,CAAiC,OACjCN,eAAe,CAACI,KAAK,CAACG,OAAP,CAAgB,CAC3BC,GAAG,CAAEJ,KAAK,CAACE,EADgB,CAE3BG,OAAO,CAAE,OAFkB,CAG3BC,MAAM,CAAE,gBAAAF,GAAG,QACP,qBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMP,CAAAA,aAAa,CAACO,GAAD,CAAnB,EAAjB,OADO,EAHgB,CAM3BG,QAAQ,CAAE,kBAACC,KAAD,CAAQC,MAAR,CAAgBL,GAAhB,CAAwB,CAC9BV,SAAS,CAACgB,MAAV,CAAiBhB,SAAS,CAACiB,OAAV,CAAkBX,KAAK,CAACE,EAAxB,CAAjB,CAA8C,CAA9C,EACAV,WAAW,CAACQ,KAAD,CAAX,CACH,CAT0B,CAAhB,CAAf,CAWAN,SAAS,CAACkB,IAAV,CAAeZ,KAAK,CAACE,EAArB,EACH,CAdD,EAeH,CAhBQ,CAgBN,CAACJ,MAAD,CAASD,aAAT,CAAwBD,eAAxB,CAAyCJ,WAAzC,CAhBM,CAAT,CAkBA,MAAO,KAAP,CACH,CAED,QAASqB,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACHhB,MAAM,CAAEgB,KAAK,CAACC,EAAN,CAASjB,MADd,CAAP,CAGH,CAED,QAASkB,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHzB,WAAW,CAAE,qBAAAU,EAAE,QAAIe,CAAAA,QAAQ,CAACzB,YAAW,CAACU,EAAD,CAAZ,CAAZ,EADZ,CAAP,CAGH,CAED,cAAeX,CAAAA,YAAY,CAACD,OAAO,CAACuB,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CrB,QAA7C,CAAD,CAA3B","sourcesContent":["import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {withSnackbar} from 'notistack'\nimport {removeError} from \"../store/domains/ui/ui.actions\"\nimport {Button} from \"@material-ui/core\"\n\nconst displayed = []\n\nfunction Notifier({enqueueSnackbar, closeSnackbar, removeError, errors = []}) {\n\n    useEffect(function () {\n        errors.forEach(error => {\n            if(displayed.includes(error.id)) return\n            enqueueSnackbar(error.message, {\n                key: error.id,\n                variant: \"error\",\n                action: key => (\n                    <Button onClick={() => closeSnackbar(key)}>OK</Button>\n                ),\n                onExited: (event, reason, key) => {\n                    displayed.splice(displayed.indexOf(error.id), 1)\n                    removeError(error)\n                }\n            })\n            displayed.push(error.id)\n        })\n    }, [errors, closeSnackbar, enqueueSnackbar, removeError])\n\n    return null\n}\n\nfunction mapStateToProps(state) {\n    return {\n        errors: state.ui.errors\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeError: id => dispatch(removeError(id))\n    }\n}\n\nexport default withSnackbar(connect(mapStateToProps, mapDispatchToProps)(Notifier));\n"]},"metadata":{},"sourceType":"module"}