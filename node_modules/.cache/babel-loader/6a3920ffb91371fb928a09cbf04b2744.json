{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\moviedb-react-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React from'react';import{Movie}from\"./types/movie-type\";import List from\"@material-ui/core/List\";import ListItem from\"@material-ui/core/ListItem\";import{makeStyles,Typography}from\"@material-ui/core\";import{getScoreColor}from\"./utils/score-color\";import{Link}from\"react-router-dom\";var useStyles=makeStyles(function(theme){return{root:{position:'fixed',maxHeight:400,width:'100%',overflowY:'auto',background:'#CAD5E2',boxShadow:'0px 10px 20px rgba(0, 0, 0, 0.22)',zIndex:2}};});function SearchOutput(_ref){var _ref$movies=_ref.movies,movies=_ref$movies===void 0?[]:_ref$movies,_ref$fullHeight=_ref.fullHeight,fullHeight=_ref$fullHeight===void 0?false:_ref$fullHeight;var classes=useStyles();return React.createElement(React.Fragment,null,React.createElement(List,{className:classes.root,\"aria-labelledby\":\"nested-list-subheader\"},movies.map(function(movie){return React.createElement(Item,{key:movie.id,movie:movie});})));}var useItemStyles=makeStyles(function(theme){return{item:_defineProperty({height:60,padding:theme.spacing(1),paddingLeft:20},theme.breakpoints.down('sm'),{height:90}),itemImage:{height:'100%',borderRadius:4,overflow:'hidden',flexShrink:0},itemInfo:{marginLeft:theme.spacing(2),marginRight:theme.spacing(2)},vote:{display:'flex',alignItems:'center',marginLeft:'auto',marginRight:theme.spacing(1),padding:theme.spacing(1),height:'100%',fontWeight:'bold',fontSize:'12pt'}};});function Item(_ref2){var movie=_ref2.movie;var classes=useItemStyles();var poster=movie.posterImageUrl||require('../assets/images/abstract_movie_poster.svg');var color=getScoreColor(movie.voteAverage);return React.createElement(ListItem,{button:true,component:Link,className:classes.item,to:\"/movie/\"+movie.id},React.createElement(\"img\",{className:classes.itemImage,src:poster,alt:movie.title}),React.createElement(\"div\",{className:classes.itemInfo},React.createElement(Typography,{variant:\"body1\"},React.createElement(\"span\",{style:{fontWeight:500}},movie.title),React.createElement(\"span\",{style:{color:'grey'}},movie.releaseDate>0?\" (\".concat(movie.releaseDate.getFullYear(),\")\"):'')),React.createElement(Typography,{variant:\"body2\",component:\"span\",style:{color:'grey'}},!!movie.genres.length?movie.genres.join(', '):'—')),React.createElement(Typography,{variant:\"body2\",className:classes.vote,style:{color:color}},movie.voteAverage>0?movie.voteAverage:'—'));}export default SearchOutput;","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/moviedb-react-app-master/src/components/SearchOutput.js"],"names":["React","Movie","List","ListItem","makeStyles","Typography","getScoreColor","Link","useStyles","theme","root","position","maxHeight","width","overflowY","background","boxShadow","zIndex","SearchOutput","movies","fullHeight","classes","map","movie","id","useItemStyles","item","height","padding","spacing","paddingLeft","breakpoints","down","itemImage","borderRadius","overflow","flexShrink","itemInfo","marginLeft","marginRight","vote","display","alignItems","fontWeight","fontSize","Item","poster","posterImageUrl","require","color","voteAverage","title","releaseDate","getFullYear","genres","length","join"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Movie} from \"./types/movie-type\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport {makeStyles, Typography} from \"@material-ui/core\"\nimport {getScoreColor} from \"./utils/score-color\"\nimport {Link} from \"react-router-dom\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'fixed',\n        maxHeight: 400,\n        width: '100%',\n        overflowY: 'auto',\n        background: '#CAD5E2',\n        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.22)',\n        zIndex: 2\n    }\n}))\n\nSearchOutput.propTypes = {\n    movies: PropTypes.arrayOf(Movie)\n}\n\nfunction SearchOutput({movies = [], fullHeight = false}) {\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <List className={classes.root} aria-labelledby=\"nested-list-subheader\">\n                {movies.map(movie => <Item key={movie.id} movie={movie} />)}\n            </List>\n        </React.Fragment>\n    )\n}\n\nconst useItemStyles = makeStyles(theme => ({\n    item: {\n        height: 60,\n        padding: theme.spacing(1),\n        paddingLeft: 20,\n\n        [theme.breakpoints.down('sm')]: {\n            height: 90,\n        }\n    },\n    itemImage: {\n        height: '100%',\n        borderRadius: 4,\n        overflow: 'hidden',\n        flexShrink: 0\n    },\n    itemInfo: {\n         marginLeft: theme.spacing(2),\n         marginRight: theme.spacing(2)\n    },\n    vote: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: 'auto',\n        marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        height: '100%',\n        fontWeight: 'bold',\n        fontSize: '12pt',\n    }\n}))\n\nfunction Item({movie}){\n    const classes = useItemStyles()\n\n    const poster = movie.posterImageUrl || require('../assets/images/abstract_movie_poster.svg')\n\n    const color = getScoreColor(movie.voteAverage)\n\n    return (\n        <ListItem button component={Link} className={classes.item} to={\"/movie/\" + movie.id}>\n                <img className={classes.itemImage} src={poster} alt={movie.title}/>\n                <div className={classes.itemInfo}>\n                    <Typography variant=\"body1\">\n                        <span style={{fontWeight: 500}}>{movie.title}</span>\n                        <span style={{color: 'grey'}}>{movie.releaseDate > 0 ? ` (${movie.releaseDate.getFullYear()})` : ''}</span>\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"span\" style={{color: 'grey'}}>\n                        {!!movie.genres.length ? movie.genres.join(', ') : '—'}\n                    </Typography>\n                </div>\n                <Typography\n                    variant=\"body2\"\n                    className={classes.vote}\n                    style={{color: color}}\n                >\n                    {movie.voteAverage > 0 ? movie.voteAverage : '—'}\n                </Typography>\n        </ListItem>\n    )\n}\n\nexport default SearchOutput\n"]},"metadata":{},"sourceType":"module"}